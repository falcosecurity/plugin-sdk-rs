/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Default)]
pub struct __IncompleteArrayField<T>(::std::marker::PhantomData<T>, [T; 0]);
impl<T> __IncompleteArrayField<T> {
    #[inline]
    pub const fn new() -> Self {
        __IncompleteArrayField(::std::marker::PhantomData, [])
    }
    #[inline]
    pub fn as_ptr(&self) -> *const T {
        self as *const _ as *const T
    }
    #[inline]
    pub fn as_mut_ptr(&mut self) -> *mut T {
        self as *mut _ as *mut T
    }
    #[inline]
    pub unsafe fn as_slice(&self, len: usize) -> &[T] {
        ::std::slice::from_raw_parts(self.as_ptr(), len)
    }
    #[inline]
    pub unsafe fn as_mut_slice(&mut self, len: usize) -> &mut [T] {
        ::std::slice::from_raw_parts_mut(self.as_mut_ptr(), len)
    }
}
impl<T> ::std::fmt::Debug for __IncompleteArrayField<T> {
    fn fmt(&self, fmt: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        fmt.write_str("__IncompleteArrayField")
    }
}
pub const _STDINT_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __TIMESIZE: u32 = 64;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_60559_BFP__: u32 = 201404;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 35;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub const PPM_MAX_EVENT_PARAMS: u32 = 32;
pub const PPM_MAX_NAME_LEN: u32 = 32;
pub const PPM_AF_UNSPEC: u32 = 0;
pub const PPM_AF_UNIX: u32 = 1;
pub const PPM_AF_LOCAL: u32 = 1;
pub const PPM_AF_INET: u32 = 2;
pub const PPM_AF_AX25: u32 = 3;
pub const PPM_AF_IPX: u32 = 4;
pub const PPM_AF_APPLETALK: u32 = 5;
pub const PPM_AF_NETROM: u32 = 6;
pub const PPM_AF_BRIDGE: u32 = 7;
pub const PPM_AF_ATMPVC: u32 = 8;
pub const PPM_AF_X25: u32 = 9;
pub const PPM_AF_INET6: u32 = 10;
pub const PPM_AF_ROSE: u32 = 11;
pub const PPM_AF_DECnet: u32 = 12;
pub const PPM_AF_NETBEUI: u32 = 13;
pub const PPM_AF_SECURITY: u32 = 14;
pub const PPM_AF_KEY: u32 = 15;
pub const PPM_AF_NETLINK: u32 = 16;
pub const PPM_AF_ROUTE: u32 = 16;
pub const PPM_AF_PACKET: u32 = 17;
pub const PPM_AF_ASH: u32 = 18;
pub const PPM_AF_ECONET: u32 = 19;
pub const PPM_AF_ATMSVC: u32 = 20;
pub const PPM_AF_RDS: u32 = 21;
pub const PPM_AF_SNA: u32 = 22;
pub const PPM_AF_IRDA: u32 = 23;
pub const PPM_AF_PPPOX: u32 = 24;
pub const PPM_AF_WANPIPE: u32 = 25;
pub const PPM_AF_LLC: u32 = 26;
pub const PPM_AF_CAN: u32 = 29;
pub const PPM_AF_TIPC: u32 = 30;
pub const PPM_AF_BLUETOOTH: u32 = 31;
pub const PPM_AF_IUCV: u32 = 32;
pub const PPM_AF_RXRPC: u32 = 33;
pub const PPM_AF_ISDN: u32 = 34;
pub const PPM_AF_PHONET: u32 = 35;
pub const PPM_AF_IEEE802154: u32 = 36;
pub const PPM_AF_CAIF: u32 = 37;
pub const PPM_AF_ALG: u32 = 38;
pub const PPM_AF_NFC: u32 = 39;
pub const PPM_O_NONE: u32 = 0;
pub const PPM_O_RDONLY: u32 = 1;
pub const PPM_O_WRONLY: u32 = 2;
pub const PPM_O_RDWR: u32 = 3;
pub const PPM_O_CREAT: u32 = 4;
pub const PPM_O_APPEND: u32 = 8;
pub const PPM_O_DSYNC: u32 = 16;
pub const PPM_O_EXCL: u32 = 32;
pub const PPM_O_NONBLOCK: u32 = 64;
pub const PPM_O_SYNC: u32 = 128;
pub const PPM_O_TRUNC: u32 = 256;
pub const PPM_O_DIRECT: u32 = 512;
pub const PPM_O_DIRECTORY: u32 = 1024;
pub const PPM_O_LARGEFILE: u32 = 2048;
pub const PPM_O_CLOEXEC: u32 = 4096;
pub const PPM_O_TMPFILE: u32 = 8192;
pub const PPM_O_F_CREATED: u32 = 16384;
pub const PPM_FD_UPPER_LAYER: u32 = 32768;
pub const PPM_FD_LOWER_LAYER: u32 = 65536;
pub const PPM_FD_UPPER_LAYER_CREAT: u32 = 1;
pub const PPM_FD_LOWER_LAYER_CREAT: u32 = 2;
pub const PPM_S_NONE: u32 = 0;
pub const PPM_S_IXOTH: u32 = 1;
pub const PPM_S_IWOTH: u32 = 2;
pub const PPM_S_IROTH: u32 = 4;
pub const PPM_S_IXGRP: u32 = 8;
pub const PPM_S_IWGRP: u32 = 16;
pub const PPM_S_IRGRP: u32 = 32;
pub const PPM_S_IXUSR: u32 = 64;
pub const PPM_S_IWUSR: u32 = 128;
pub const PPM_S_IRUSR: u32 = 256;
pub const PPM_S_ISVTX: u32 = 512;
pub const PPM_S_ISGID: u32 = 1024;
pub const PPM_S_ISUID: u32 = 2048;
pub const PPM_S_IFREG: u32 = 32768;
pub const PPM_S_IFCHR: u32 = 8192;
pub const PPM_S_IFBLK: u32 = 24576;
pub const PPM_S_IFIFO: u32 = 4096;
pub const PPM_S_IFSOCK: u32 = 49152;
pub const PPM_LOCK_NONE: u32 = 0;
pub const PPM_LOCK_SH: u32 = 1;
pub const PPM_LOCK_EX: u32 = 2;
pub const PPM_LOCK_NB: u32 = 4;
pub const PPM_LOCK_UN: u32 = 8;
pub const PPM_CL_NONE: u32 = 0;
pub const PPM_CL_CLONE_FILES: u32 = 1;
pub const PPM_CL_CLONE_FS: u32 = 2;
pub const PPM_CL_CLONE_IO: u32 = 4;
pub const PPM_CL_CLONE_NEWIPC: u32 = 8;
pub const PPM_CL_CLONE_NEWNET: u32 = 16;
pub const PPM_CL_CLONE_NEWNS: u32 = 32;
pub const PPM_CL_CLONE_NEWPID: u32 = 64;
pub const PPM_CL_CLONE_NEWUTS: u32 = 128;
pub const PPM_CL_CLONE_PARENT: u32 = 256;
pub const PPM_CL_CLONE_PARENT_SETTID: u32 = 512;
pub const PPM_CL_CLONE_PTRACE: u32 = 1024;
pub const PPM_CL_CLONE_SIGHAND: u32 = 2048;
pub const PPM_CL_CLONE_SYSVSEM: u32 = 4096;
pub const PPM_CL_CLONE_THREAD: u32 = 8192;
pub const PPM_CL_CLONE_UNTRACED: u32 = 16384;
pub const PPM_CL_CLONE_VM: u32 = 32768;
pub const PPM_CL_CLONE_INVERTED: u32 = 65536;
pub const PPM_CL_NAME_CHANGED: u32 = 131072;
pub const PPM_CL_CLOSED: u32 = 262144;
pub const PPM_CL_ACTIVE: u32 = 524288;
pub const PPM_CL_CLONE_NEWUSER: u32 = 1048576;
pub const PPM_CL_PIPE_SRC: u32 = 2097152;
pub const PPM_CL_PIPE_DST: u32 = 4194304;
pub const PPM_CL_CLONE_CHILD_CLEARTID: u32 = 8388608;
pub const PPM_CL_CLONE_CHILD_SETTID: u32 = 16777216;
pub const PPM_CL_CLONE_SETTLS: u32 = 33554432;
pub const PPM_CL_CLONE_STOPPED: u32 = 67108864;
pub const PPM_CL_CLONE_VFORK: u32 = 134217728;
pub const PPM_CL_CLONE_NEWCGROUP: u32 = 268435456;
pub const PPM_CL_CHILD_IN_PIDNS: u32 = 536870912;
pub const PPM_CL_IS_MAIN_THREAD: u32 = 1073741824;
pub const PPM_FU_FUTEX_WAIT: u32 = 0;
pub const PPM_FU_FUTEX_WAKE: u32 = 1;
pub const PPM_FU_FUTEX_FD: u32 = 2;
pub const PPM_FU_FUTEX_REQUEUE: u32 = 3;
pub const PPM_FU_FUTEX_CMP_REQUEUE: u32 = 4;
pub const PPM_FU_FUTEX_WAKE_OP: u32 = 5;
pub const PPM_FU_FUTEX_LOCK_PI: u32 = 6;
pub const PPM_FU_FUTEX_UNLOCK_PI: u32 = 7;
pub const PPM_FU_FUTEX_TRYLOCK_PI: u32 = 8;
pub const PPM_FU_FUTEX_WAIT_BITSET: u32 = 9;
pub const PPM_FU_FUTEX_WAKE_BITSET: u32 = 10;
pub const PPM_FU_FUTEX_WAIT_REQUEUE_PI: u32 = 11;
pub const PPM_FU_FUTEX_CMP_REQUEUE_PI: u32 = 12;
pub const PPM_FU_FUTEX_PRIVATE_FLAG: u32 = 128;
pub const PPM_FU_FUTEX_CLOCK_REALTIME: u32 = 256;
pub const PPM_SEEK_SET: u32 = 0;
pub const PPM_SEEK_CUR: u32 = 1;
pub const PPM_SEEK_END: u32 = 2;
pub const PPM_POLLIN: u32 = 1;
pub const PPM_POLLPRI: u32 = 2;
pub const PPM_POLLOUT: u32 = 4;
pub const PPM_POLLRDHUP: u32 = 8;
pub const PPM_POLLERR: u32 = 16;
pub const PPM_POLLHUP: u32 = 32;
pub const PPM_POLLNVAL: u32 = 64;
pub const PPM_POLLRDNORM: u32 = 128;
pub const PPM_POLLRDBAND: u32 = 256;
pub const PPM_POLLWRNORM: u32 = 512;
pub const PPM_POLLWRBAND: u32 = 1024;
pub const PPM_MS_RDONLY: u32 = 1;
pub const PPM_MS_NOSUID: u32 = 2;
pub const PPM_MS_NODEV: u32 = 4;
pub const PPM_MS_NOEXEC: u32 = 8;
pub const PPM_MS_SYNCHRONOUS: u32 = 16;
pub const PPM_MS_REMOUNT: u32 = 32;
pub const PPM_MS_MANDLOCK: u32 = 64;
pub const PPM_MS_DIRSYNC: u32 = 128;
pub const PPM_MS_NOATIME: u32 = 1024;
pub const PPM_MS_NODIRATIME: u32 = 2048;
pub const PPM_MS_BIND: u32 = 4096;
pub const PPM_MS_MOVE: u32 = 8192;
pub const PPM_MS_REC: u32 = 16384;
pub const PPM_MS_SILENT: u32 = 32768;
pub const PPM_MS_POSIXACL: u32 = 65536;
pub const PPM_MS_UNBINDABLE: u32 = 131072;
pub const PPM_MS_PRIVATE: u32 = 262144;
pub const PPM_MS_SLAVE: u32 = 524288;
pub const PPM_MS_SHARED: u32 = 1048576;
pub const PPM_MS_RELATIME: u32 = 2097152;
pub const PPM_MS_KERNMOUNT: u32 = 4194304;
pub const PPM_MS_I_VERSION: u32 = 8388608;
pub const PPM_MS_STRICTATIME: u32 = 16777216;
pub const PPM_MS_LAZYTIME: u32 = 33554432;
pub const PPM_MS_NOSEC: u32 = 268435456;
pub const PPM_MS_BORN: u32 = 536870912;
pub const PPM_MS_ACTIVE: u32 = 1073741824;
pub const PPM_MS_NOUSER: u32 = 2147483648;
pub const PPM_MNT_FORCE: u32 = 1;
pub const PPM_MNT_DETACH: u32 = 2;
pub const PPM_MNT_EXPIRE: u32 = 4;
pub const PPM_UMOUNT_NOFOLLOW: u32 = 8;
pub const PPM_SHUT_RD: u32 = 0;
pub const PPM_SHUT_WR: u32 = 1;
pub const PPM_SHUT_RDWR: u32 = 2;
pub const PPM_SHUT_UNKNOWN: u32 = 65535;
pub const PPM_AT_FDCWD: i32 = -100;
pub const PPM_AT_REMOVEDIR: u32 = 512;
pub const PPM_AT_SYMLINK_FOLLOW: u32 = 1024;
pub const PPM_AT_EMPTY_PATH: u32 = 4096;
pub const PPM_AT_NO_AUTOMOUNT: u32 = 2048;
pub const PPM_AT_SYMLINK_NOFOLLOW: u32 = 256;
pub const PPM_RLIMIT_CPU: u32 = 0;
pub const PPM_RLIMIT_FSIZE: u32 = 1;
pub const PPM_RLIMIT_DATA: u32 = 2;
pub const PPM_RLIMIT_STACK: u32 = 3;
pub const PPM_RLIMIT_CORE: u32 = 4;
pub const PPM_RLIMIT_RSS: u32 = 5;
pub const PPM_RLIMIT_NPROC: u32 = 6;
pub const PPM_RLIMIT_NOFILE: u32 = 7;
pub const PPM_RLIMIT_MEMLOCK: u32 = 8;
pub const PPM_RLIMIT_AS: u32 = 9;
pub const PPM_RLIMIT_LOCKS: u32 = 10;
pub const PPM_RLIMIT_SIGPENDING: u32 = 11;
pub const PPM_RLIMIT_MSGQUEUE: u32 = 12;
pub const PPM_RLIMIT_NICE: u32 = 13;
pub const PPM_RLIMIT_RTPRIO: u32 = 14;
pub const PPM_RLIMIT_RTTIME: u32 = 15;
pub const PPM_RLIMIT_UNKNOWN: u32 = 255;
pub const PPM_FCNTL_UNKNOWN: u32 = 0;
pub const PPM_FCNTL_F_DUPFD: u32 = 1;
pub const PPM_FCNTL_F_GETFD: u32 = 2;
pub const PPM_FCNTL_F_SETFD: u32 = 3;
pub const PPM_FCNTL_F_GETFL: u32 = 4;
pub const PPM_FCNTL_F_SETFL: u32 = 5;
pub const PPM_FCNTL_F_GETLK: u32 = 6;
pub const PPM_FCNTL_F_SETLK: u32 = 8;
pub const PPM_FCNTL_F_SETLKW: u32 = 9;
pub const PPM_FCNTL_F_SETOWN: u32 = 10;
pub const PPM_FCNTL_F_GETOWN: u32 = 12;
pub const PPM_FCNTL_F_SETSIG: u32 = 13;
pub const PPM_FCNTL_F_GETSIG: u32 = 15;
pub const PPM_FCNTL_F_GETLK64: u32 = 17;
pub const PPM_FCNTL_F_SETLK64: u32 = 18;
pub const PPM_FCNTL_F_SETLKW64: u32 = 19;
pub const PPM_FCNTL_F_SETOWN_EX: u32 = 21;
pub const PPM_FCNTL_F_GETOWN_EX: u32 = 22;
pub const PPM_FCNTL_F_SETLEASE: u32 = 23;
pub const PPM_FCNTL_F_GETLEASE: u32 = 24;
pub const PPM_FCNTL_F_CANCELLK: u32 = 25;
pub const PPM_FCNTL_F_DUPFD_CLOEXEC: u32 = 26;
pub const PPM_FCNTL_F_NOTIFY: u32 = 27;
pub const PPM_FCNTL_F_SETPIPE_SZ: u32 = 28;
pub const PPM_FCNTL_F_GETPIPE_SZ: u32 = 29;
pub const PPM_FCNTL_F_OFD_GETLK: u32 = 30;
pub const PPM_FCNTL_F_OFD_SETLK: u32 = 31;
pub const PPM_FCNTL_F_OFD_SETLKW: u32 = 32;
pub const PPM_SOCKOPT_LEVEL_UNKNOWN: u32 = 0;
pub const PPM_SOCKOPT_LEVEL_SOL_SOCKET: u32 = 1;
pub const PPM_SOCKOPT_LEVEL_SOL_TCP: u32 = 2;
pub const PPM_SOCKOPT_UNKNOWN: u32 = 0;
pub const PPM_SOCKOPT_SO_DEBUG: u32 = 1;
pub const PPM_SOCKOPT_SO_REUSEADDR: u32 = 2;
pub const PPM_SOCKOPT_SO_TYPE: u32 = 3;
pub const PPM_SOCKOPT_SO_ERROR: u32 = 4;
pub const PPM_SOCKOPT_SO_DONTROUTE: u32 = 5;
pub const PPM_SOCKOPT_SO_BROADCAST: u32 = 6;
pub const PPM_SOCKOPT_SO_SNDBUF: u32 = 7;
pub const PPM_SOCKOPT_SO_RCVBUF: u32 = 8;
pub const PPM_SOCKOPT_SO_SNDBUFFORCE: u32 = 32;
pub const PPM_SOCKOPT_SO_RCVBUFFORCE: u32 = 33;
pub const PPM_SOCKOPT_SO_KEEPALIVE: u32 = 9;
pub const PPM_SOCKOPT_SO_OOBINLINE: u32 = 10;
pub const PPM_SOCKOPT_SO_NO_CHECK: u32 = 11;
pub const PPM_SOCKOPT_SO_PRIORITY: u32 = 12;
pub const PPM_SOCKOPT_SO_LINGER: u32 = 13;
pub const PPM_SOCKOPT_SO_BSDCOMPAT: u32 = 14;
pub const PPM_SOCKOPT_SO_REUSEPORT: u32 = 15;
pub const PPM_SOCKOPT_SO_PASSCRED: u32 = 16;
pub const PPM_SOCKOPT_SO_PEERCRED: u32 = 17;
pub const PPM_SOCKOPT_SO_RCVLOWAT: u32 = 18;
pub const PPM_SOCKOPT_SO_SNDLOWAT: u32 = 19;
pub const PPM_SOCKOPT_SO_RCVTIMEO: u32 = 20;
pub const PPM_SOCKOPT_SO_SNDTIMEO: u32 = 21;
pub const PPM_SOCKOPT_SO_SECURITY_AUTHENTICATION: u32 = 22;
pub const PPM_SOCKOPT_SO_SECURITY_ENCRYPTION_TRANSPORT: u32 = 23;
pub const PPM_SOCKOPT_SO_SECURITY_ENCRYPTION_NETWORK: u32 = 24;
pub const PPM_SOCKOPT_SO_BINDTODEVICE: u32 = 25;
pub const PPM_SOCKOPT_SO_ATTACH_FILTER: u32 = 26;
pub const PPM_SOCKOPT_SO_DETACH_FILTER: u32 = 27;
pub const PPM_SOCKOPT_SO_PEERNAME: u32 = 28;
pub const PPM_SOCKOPT_SO_TIMESTAMP: u32 = 29;
pub const PPM_SOCKOPT_SO_ACCEPTCONN: u32 = 30;
pub const PPM_SOCKOPT_SO_PEERSEC: u32 = 31;
pub const PPM_SOCKOPT_SO_PASSSEC: u32 = 34;
pub const PPM_SOCKOPT_SO_TIMESTAMPNS: u32 = 35;
pub const PPM_SOCKOPT_SO_MARK: u32 = 36;
pub const PPM_SOCKOPT_SO_TIMESTAMPING: u32 = 37;
pub const PPM_SOCKOPT_SO_PROTOCOL: u32 = 38;
pub const PPM_SOCKOPT_SO_DOMAIN: u32 = 39;
pub const PPM_SOCKOPT_SO_RXQ_OVFL: u32 = 40;
pub const PPM_SOCKOPT_SO_WIFI_STATUS: u32 = 41;
pub const PPM_SOCKOPT_SO_PEEK_OFF: u32 = 42;
pub const PPM_SOCKOPT_SO_NOFCS: u32 = 43;
pub const PPM_SOCKOPT_SO_LOCK_FILTER: u32 = 44;
pub const PPM_SOCKOPT_SO_SELECT_ERR_QUEUE: u32 = 45;
pub const PPM_SOCKOPT_SO_BUSY_POLL: u32 = 46;
pub const PPM_SOCKOPT_SO_MAX_PACING_RATE: u32 = 47;
pub const PPM_SOCKOPT_SO_BPF_EXTENSIONS: u32 = 48;
pub const PPM_SOCKOPT_SO_INCOMING_CPU: u32 = 49;
pub const PPM_SOCKOPT_SO_ATTACH_BPF: u32 = 50;
pub const PPM_SOCKOPT_SO_PEERGROUPS: u32 = 51;
pub const PPM_SOCKOPT_SO_MEMINFO: u32 = 52;
pub const PPM_SOCKOPT_SO_COOKIE: u32 = 53;
pub const PPM_SOCKOPT_IDX_UNKNOWN: u32 = 0;
pub const PPM_SOCKOPT_IDX_ERRNO: u32 = 1;
pub const PPM_SOCKOPT_IDX_UINT32: u32 = 2;
pub const PPM_SOCKOPT_IDX_UINT64: u32 = 3;
pub const PPM_SOCKOPT_IDX_TIMEVAL: u32 = 4;
pub const PPM_SOCKOPT_IDX_MAX: u32 = 5;
pub const PPM_PTRACE_UNKNOWN: u32 = 0;
pub const PPM_PTRACE_TRACEME: u32 = 1;
pub const PPM_PTRACE_PEEKTEXT: u32 = 2;
pub const PPM_PTRACE_PEEKDATA: u32 = 3;
pub const PPM_PTRACE_PEEKUSR: u32 = 4;
pub const PPM_PTRACE_POKETEXT: u32 = 5;
pub const PPM_PTRACE_POKEDATA: u32 = 6;
pub const PPM_PTRACE_POKEUSR: u32 = 7;
pub const PPM_PTRACE_CONT: u32 = 8;
pub const PPM_PTRACE_KILL: u32 = 9;
pub const PPM_PTRACE_SINGLESTEP: u32 = 10;
pub const PPM_PTRACE_ATTACH: u32 = 11;
pub const PPM_PTRACE_DETACH: u32 = 12;
pub const PPM_PTRACE_SYSCALL: u32 = 13;
pub const PPM_PTRACE_SETOPTIONS: u32 = 14;
pub const PPM_PTRACE_GETEVENTMSG: u32 = 15;
pub const PPM_PTRACE_GETSIGINFO: u32 = 16;
pub const PPM_PTRACE_SETSIGINFO: u32 = 17;
pub const PPM_PTRACE_GETREGSET: u32 = 18;
pub const PPM_PTRACE_SETREGSET: u32 = 19;
pub const PPM_PTRACE_SEIZE: u32 = 20;
pub const PPM_PTRACE_INTERRUPT: u32 = 21;
pub const PPM_PTRACE_LISTEN: u32 = 22;
pub const PPM_PTRACE_PEEKSIGINFO: u32 = 23;
pub const PPM_PTRACE_GETSIGMASK: u32 = 24;
pub const PPM_PTRACE_SETSIGMASK: u32 = 25;
pub const PPM_PTRACE_GETREGS: u32 = 26;
pub const PPM_PTRACE_SETREGS: u32 = 27;
pub const PPM_PTRACE_GETFPREGS: u32 = 28;
pub const PPM_PTRACE_SETFPREGS: u32 = 29;
pub const PPM_PTRACE_GETFPXREGS: u32 = 30;
pub const PPM_PTRACE_SETFPXREGS: u32 = 31;
pub const PPM_PTRACE_OLDSETOPTIONS: u32 = 32;
pub const PPM_PTRACE_GET_THREAD_AREA: u32 = 33;
pub const PPM_PTRACE_SET_THREAD_AREA: u32 = 34;
pub const PPM_PTRACE_ARCH_PRCTL: u32 = 35;
pub const PPM_PTRACE_SYSEMU: u32 = 36;
pub const PPM_PTRACE_SYSEMU_SINGLESTEP: u32 = 37;
pub const PPM_PTRACE_SINGLEBLOCK: u32 = 38;
pub const PPM_PTRACE_IDX_UINT64: u32 = 0;
pub const PPM_PTRACE_IDX_SIGTYPE: u32 = 1;
pub const PPM_PTRACE_IDX_MAX: u32 = 2;
pub const PPM_BPF_IDX_FD: u32 = 0;
pub const PPM_BPF_IDX_RES: u32 = 1;
pub const PPM_BPF_IDX_MAX: u32 = 2;
pub const PPM_PROT_NONE: u32 = 0;
pub const PPM_PROT_READ: u32 = 1;
pub const PPM_PROT_WRITE: u32 = 2;
pub const PPM_PROT_EXEC: u32 = 4;
pub const PPM_PROT_SEM: u32 = 8;
pub const PPM_PROT_GROWSDOWN: u32 = 16;
pub const PPM_PROT_GROWSUP: u32 = 32;
pub const PPM_PROT_SAO: u32 = 64;
pub const PPM_MAP_SHARED: u32 = 1;
pub const PPM_MAP_PRIVATE: u32 = 2;
pub const PPM_MAP_FIXED: u32 = 4;
pub const PPM_MAP_ANONYMOUS: u32 = 8;
pub const PPM_MAP_32BIT: u32 = 16;
pub const PPM_MAP_RENAME: u32 = 32;
pub const PPM_MAP_NORESERVE: u32 = 64;
pub const PPM_MAP_POPULATE: u32 = 128;
pub const PPM_MAP_NONBLOCK: u32 = 256;
pub const PPM_MAP_GROWSDOWN: u32 = 512;
pub const PPM_MAP_DENYWRITE: u32 = 1024;
pub const PPM_MAP_EXECUTABLE: u32 = 2048;
pub const PPM_MAP_INHERIT: u32 = 4096;
pub const PPM_MAP_FILE: u32 = 8192;
pub const PPM_MAP_LOCKED: u32 = 16384;
pub const PPM_SPLICE_F_MOVE: u32 = 1;
pub const PPM_SPLICE_F_NONBLOCK: u32 = 2;
pub const PPM_SPLICE_F_MORE: u32 = 4;
pub const PPM_SPLICE_F_GIFT: u32 = 8;
pub const PPM_Q_QUOTAON: u32 = 1;
pub const PPM_Q_QUOTAOFF: u32 = 2;
pub const PPM_Q_GETFMT: u32 = 4;
pub const PPM_Q_GETINFO: u32 = 8;
pub const PPM_Q_SETINFO: u32 = 16;
pub const PPM_Q_GETQUOTA: u32 = 32;
pub const PPM_Q_SETQUOTA: u32 = 64;
pub const PPM_Q_SYNC: u32 = 128;
pub const PPM_Q_XQUOTAON: u32 = 256;
pub const PPM_Q_XQUOTAOFF: u32 = 512;
pub const PPM_Q_XGETQUOTA: u32 = 1024;
pub const PPM_Q_XSETQLIM: u32 = 2048;
pub const PPM_Q_XGETQSTAT: u32 = 4096;
pub const PPM_Q_XQUOTARM: u32 = 8192;
pub const PPM_Q_XQUOTASYNC: u32 = 16384;
pub const PPM_Q_XGETQSTATV: u32 = 32768;
pub const PPM_USRQUOTA: u32 = 1;
pub const PPM_GRPQUOTA: u32 = 2;
pub const PPM_DQF_NONE: u32 = 1;
pub const PPM_V1_DQF_RSQUASH: u32 = 2;
pub const PPM_QFMT_NOT_USED: u32 = 1;
pub const PPM_QFMT_VFS_OLD: u32 = 2;
pub const PPM_QFMT_VFS_V0: u32 = 4;
pub const PPM_QFMT_VFS_V1: u32 = 8;
pub const PPM_IPC_NOWAIT: u32 = 1;
pub const PPM_SEM_UNDO: u32 = 2;
pub const PPM_IPC_CREAT: u32 = 8192;
pub const PPM_IPC_EXCL: u32 = 16384;
pub const PPM_IPC_STAT: u32 = 1;
pub const PPM_IPC_SET: u32 = 2;
pub const PPM_IPC_RMID: u32 = 4;
pub const PPM_IPC_INFO: u32 = 8;
pub const PPM_SEM_INFO: u32 = 16;
pub const PPM_SEM_STAT: u32 = 32;
pub const PPM_GETALL: u32 = 64;
pub const PPM_GETNCNT: u32 = 128;
pub const PPM_GETPID: u32 = 256;
pub const PPM_GETVAL: u32 = 512;
pub const PPM_GETZCNT: u32 = 1024;
pub const PPM_SETALL: u32 = 2048;
pub const PPM_SETVAL: u32 = 4096;
pub const PPM_F_OK: u32 = 0;
pub const PPM_X_OK: u32 = 1;
pub const PPM_W_OK: u32 = 2;
pub const PPM_R_OK: u32 = 4;
pub const PPM_PF_PROTECTION_VIOLATION: u32 = 1;
pub const PPM_PF_PAGE_NOT_PRESENT: u32 = 2;
pub const PPM_PF_WRITE_ACCESS: u32 = 4;
pub const PPM_PF_READ_ACCESS: u32 = 8;
pub const PPM_PF_USER_FAULT: u32 = 16;
pub const PPM_PF_SUPERVISOR_FAULT: u32 = 32;
pub const PPM_PF_RESERVED_PAGE: u32 = 64;
pub const PPM_PF_INSTRUCTION_FETCH: u32 = 128;
pub const PPM_RENAME_NOREPLACE: u32 = 1;
pub const PPM_RENAME_EXCHANGE: u32 = 2;
pub const PPM_RENAME_WHITEOUT: u32 = 4;
pub const PPM_RESOLVE_BENEATH: u32 = 1;
pub const PPM_RESOLVE_IN_ROOT: u32 = 2;
pub const PPM_RESOLVE_NO_MAGICLINKS: u32 = 4;
pub const PPM_RESOLVE_NO_SYMLINKS: u32 = 8;
pub const PPM_RESOLVE_NO_XDEV: u32 = 16;
pub const PPM_RESOLVE_CACHED: u32 = 32;
pub const PPM_EXE_WRITABLE: u32 = 1;
pub const PPM_EXE_UPPER_LAYER: u32 = 2;
pub const PPM_EXE_FROM_MEMFD: u32 = 4;
pub const PPM_EXE_LOWER_LAYER: u32 = 8;
pub const PPM_EXVAT_AT_EMPTY_PATH: u32 = 1;
pub const PPM_EXVAT_AT_SYMLINK_NOFOLLOW: u32 = 2;
pub const PPM_IORING_SETUP_IOPOLL: u32 = 1;
pub const PPM_IORING_SETUP_SQPOLL: u32 = 2;
pub const PPM_IORING_SQ_NEED_WAKEUP: u32 = 4;
pub const PPM_IORING_SETUP_SQ_AFF: u32 = 8;
pub const PPM_IORING_SETUP_CQSIZE: u32 = 16;
pub const PPM_IORING_SETUP_CLAMP: u32 = 32;
pub const PPM_IORING_SETUP_ATTACH_WQ: u32 = 64;
pub const PPM_IORING_SETUP_R_DISABLED: u32 = 128;
pub const PPM_IORING_FEAT_SINGLE_MMAP: u32 = 1;
pub const PPM_IORING_FEAT_NODROP: u32 = 2;
pub const PPM_IORING_FEAT_SUBMIT_STABLE: u32 = 4;
pub const PPM_IORING_FEAT_RW_CUR_POS: u32 = 8;
pub const PPM_IORING_FEAT_CUR_PERSONALITY: u32 = 16;
pub const PPM_IORING_FEAT_FAST_POLL: u32 = 32;
pub const PPM_IORING_FEAT_POLL_32BITS: u32 = 64;
pub const PPM_IORING_FEAT_SQPOLL_NONFIXED: u32 = 128;
pub const PPM_IORING_FEAT_ENTER_EXT_ARG: u32 = 256;
pub const PPM_IORING_FEAT_NATIVE_WORKERS: u32 = 512;
pub const PPM_IORING_FEAT_RSRC_TAGS: u32 = 1024;
pub const PPM_IORING_ENTER_GETEVENTS: u32 = 1;
pub const PPM_IORING_ENTER_SQ_WAKEUP: u32 = 2;
pub const PPM_IORING_ENTER_SQ_WAIT: u32 = 4;
pub const PPM_IORING_ENTER_EXT_ARG: u32 = 8;
pub const PPM_IORING_REGISTER_BUFFERS: u32 = 0;
pub const PPM_IORING_UNREGISTER_BUFFERS: u32 = 1;
pub const PPM_IORING_REGISTER_FILES: u32 = 2;
pub const PPM_IORING_UNREGISTER_FILES: u32 = 3;
pub const PPM_IORING_REGISTER_EVENTFD: u32 = 4;
pub const PPM_IORING_UNREGISTER_EVENTFD: u32 = 5;
pub const PPM_IORING_REGISTER_FILES_UPDATE: u32 = 6;
pub const PPM_IORING_REGISTER_EVENTFD_ASYNC: u32 = 7;
pub const PPM_IORING_REGISTER_PROBE: u32 = 8;
pub const PPM_IORING_REGISTER_PERSONALITY: u32 = 9;
pub const PPM_IORING_UNREGISTER_PERSONALITY: u32 = 10;
pub const PPM_IORING_REGISTER_RESTRICTIONS: u32 = 11;
pub const PPM_IORING_REGISTER_ENABLE_RINGS: u32 = 12;
pub const PPM_IORING_REGISTER_FILES2: u32 = 13;
pub const PPM_IORING_REGISTER_FILES_UPDATE2: u32 = 14;
pub const PPM_IORING_REGISTER_BUFFERS2: u32 = 15;
pub const PPM_IORING_REGISTER_BUFFERS_UPDATE: u32 = 16;
pub const PPM_IORING_REGISTER_IOWQ_AFF: u32 = 17;
pub const PPM_IORING_UNREGISTER_IOWQ_AFF: u32 = 18;
pub const PPM_IORING_REGISTER_IOWQ_MAX_WORKERS: u32 = 19;
pub const PPM_IORING_REGISTER_RING_FDS: u32 = 20;
pub const PPM_IORING_UNREGISTER_RING_FDS: u32 = 21;
pub const PPM_MLOCKALL_MCL_CURRENT: u32 = 1;
pub const PPM_MLOCKALL_MCL_FUTURE: u32 = 2;
pub const PPM_MLOCKALL_MCL_ONFAULT: u32 = 4;
pub const PPM_MLOCK_ONFAULT: u32 = 1;
pub const PPM_MFD_CLOEXEC: u32 = 1;
pub const PPM_MFD_ALLOW_SEALING: u32 = 2;
pub const PPM_MFD_HUGETLB: u32 = 4;
pub const PPM_FSCONFIG_SET_FLAG: u32 = 0;
pub const PPM_FSCONFIG_SET_STRING: u32 = 1;
pub const PPM_FSCONFIG_SET_BINARY: u32 = 2;
pub const PPM_FSCONFIG_SET_PATH: u32 = 3;
pub const PPM_FSCONFIG_SET_PATH_EMPTY: u32 = 4;
pub const PPM_FSCONFIG_SET_FD: u32 = 5;
pub const PPM_FSCONFIG_CMD_CREATE: u32 = 6;
pub const PPM_FSCONFIG_CMD_RECONFIGURE: u32 = 7;
pub const PPM_EPOLL_CLOEXEC: u32 = 1;
pub const PPM_PR_SET_PDEATHSIG: u32 = 1;
pub const PPM_PR_GET_PDEATHSIG: u32 = 2;
pub const PPM_PR_GET_DUMPABLE: u32 = 3;
pub const PPM_PR_SET_DUMPABLE: u32 = 4;
pub const PPM_PR_GET_UNALIGN: u32 = 5;
pub const PPM_PR_SET_UNALIGN: u32 = 6;
pub const PPM_PR_GET_KEEPCAPS: u32 = 7;
pub const PPM_PR_SET_KEEPCAPS: u32 = 8;
pub const PPM_PR_GET_FPEMU: u32 = 9;
pub const PPM_PR_SET_FPEMU: u32 = 10;
pub const PPM_PR_GET_FPEXC: u32 = 11;
pub const PPM_PR_SET_FPEXC: u32 = 12;
pub const PPM_PR_GET_TIMING: u32 = 13;
pub const PPM_PR_SET_TIMING: u32 = 14;
pub const PPM_PR_SET_NAME: u32 = 15;
pub const PPM_PR_GET_NAME: u32 = 16;
pub const PPM_PR_GET_ENDIAN: u32 = 19;
pub const PPM_PR_SET_ENDIAN: u32 = 20;
pub const PPM_PR_GET_SECCOMP: u32 = 21;
pub const PPM_PR_SET_SECCOMP: u32 = 22;
pub const PPM_PR_CAPBSET_READ: u32 = 23;
pub const PPM_PR_CAPBSET_DROP: u32 = 24;
pub const PPM_PR_GET_TSC: u32 = 25;
pub const PPM_PR_SET_TSC: u32 = 26;
pub const PPM_PR_GET_SECUREBITS: u32 = 27;
pub const PPM_PR_SET_SECUREBITS: u32 = 28;
pub const PPM_PIDFD_NONBLOCK: u32 = 1;
pub const PPM_MODULE_INIT_IGNORE_MODVERSIONS: u32 = 1;
pub const PPM_MODULE_INIT_IGNORE_VERMAGIC: u32 = 2;
pub const PPM_MODULE_INIT_COMPRESSED_FILE: u32 = 4;
pub const PPM_DELETE_MODULE_O_TRUNC: u32 = 1;
pub const PPM_DELETE_MODULE_O_NONBLOCK: u32 = 2;
pub const PPM_BPF_MAP_CREATE: u32 = 0;
pub const PPM_BPF_MAP_LOOKUP_ELEM: u32 = 1;
pub const PPM_BPF_MAP_UPDATE_ELEM: u32 = 2;
pub const PPM_BPF_MAP_DELETE_ELEM: u32 = 3;
pub const PPM_BPF_MAP_GET_NEXT_KEY: u32 = 4;
pub const PPM_BPF_PROG_LOAD: u32 = 5;
pub const PPM_BPF_OBJ_PIN: u32 = 6;
pub const PPM_BPF_OBJ_GET: u32 = 7;
pub const PPM_BPF_PROG_ATTACH: u32 = 8;
pub const PPM_BPF_PROG_DETACH: u32 = 9;
pub const PPM_BPF_PROG_TEST_RUN: u32 = 10;
pub const PPM_BPF_PROG_RUN: u32 = 10;
pub const PPM_BPF_PROG_GET_NEXT_ID: u32 = 11;
pub const PPM_BPF_MAP_GET_NEXT_ID: u32 = 12;
pub const PPM_BPF_PROG_GET_FD_BY_ID: u32 = 13;
pub const PPM_BPF_MAP_GET_FD_BY_ID: u32 = 14;
pub const PPM_BPF_OBJ_GET_INFO_BY_FD: u32 = 15;
pub const PPM_BPF_PROG_QUERY: u32 = 16;
pub const PPM_BPF_RAW_TRACEPOINT_OPEN: u32 = 17;
pub const PPM_BPF_BTF_LOAD: u32 = 18;
pub const PPM_BPF_BTF_GET_FD_BY_ID: u32 = 19;
pub const PPM_BPF_TASK_FD_QUERY: u32 = 20;
pub const PPM_BPF_MAP_LOOKUP_AND_DELETE_ELEM: u32 = 21;
pub const PPM_BPF_MAP_FREEZE: u32 = 22;
pub const PPM_BPF_BTF_GET_NEXT_ID: u32 = 23;
pub const PPM_BPF_MAP_LOOKUP_BATCH: u32 = 24;
pub const PPM_BPF_MAP_LOOKUP_AND_DELETE_BATCH: u32 = 25;
pub const PPM_BPF_MAP_UPDATE_BATCH: u32 = 26;
pub const PPM_BPF_MAP_DELETE_BATCH: u32 = 27;
pub const PPM_BPF_LINK_CREATE: u32 = 28;
pub const PPM_BPF_LINK_UPDATE: u32 = 29;
pub const PPM_BPF_LINK_GET_FD_BY_ID: u32 = 30;
pub const PPM_BPF_LINK_GET_NEXT_ID: u32 = 31;
pub const PPM_BPF_ENABLE_STATS: u32 = 32;
pub const PPM_BPF_ITER_CREATE: u32 = 33;
pub const PPM_BPF_LINK_DETACH: u32 = 34;
pub const PPM_BPF_PROG_BIND_MAP: u32 = 35;
pub const PPM_PR_SET_TIMERSLACK: u32 = 29;
pub const PPM_PR_GET_TIMERSLACK: u32 = 30;
pub const PPM_PR_TASK_PERF_EVENTS_DISABLE: u32 = 31;
pub const PPM_PR_TASK_PERF_EVENTS_ENABLE: u32 = 32;
pub const PPM_PR_MCE_KILL: u32 = 33;
pub const PPM_PR_MCE_KILL_GET: u32 = 34;
pub const PPM_PR_SET_MM: u32 = 35;
pub const PPM_PR_SET_PTRACER: u32 = 1499557217;
pub const PPM_PR_SET_CHILD_SUBREAPER: u32 = 36;
pub const PPM_PR_GET_CHILD_SUBREAPER: u32 = 37;
pub const PPM_PR_SET_NO_NEW_PRIVS: u32 = 38;
pub const PPM_PR_GET_NO_NEW_PRIVS: u32 = 39;
pub const PPM_PR_GET_TID_ADDRESS: u32 = 40;
pub const PPM_PR_SET_THP_DISABLE: u32 = 41;
pub const PPM_PR_GET_THP_DISABLE: u32 = 42;
pub const PPM_PR_MPX_ENABLE_MANAGEMENT: u32 = 43;
pub const PPM_PR_MPX_DISABLE_MANAGEMENT: u32 = 44;
pub const PPM_PR_SET_FP_MODE: u32 = 45;
pub const PPM_PR_GET_FP_MODE: u32 = 46;
pub const PPM_PR_CAP_AMBIENT: u32 = 47;
pub const PPM_PR_SVE_SET_VL: u32 = 50;
pub const PPM_PR_SVE_GET_VL: u32 = 51;
pub const PPM_PR_GET_SPECULATION_CTRL: u32 = 52;
pub const PPM_PR_SET_SPECULATION_CTRL: u32 = 53;
pub const PPM_PR_PAC_RESET_KEYS: u32 = 54;
pub const PPM_PR_SET_TAGGED_ADDR_CTRL: u32 = 55;
pub const PPM_PR_GET_TAGGED_ADDR_CTRL: u32 = 56;
pub const PPM_PR_SET_IO_FLUSHER: u32 = 57;
pub const PPM_PR_GET_IO_FLUSHER: u32 = 58;
pub const PPM_PR_SET_SYSCALL_USER_DISPATCH: u32 = 59;
pub const PPM_PR_PAC_SET_ENABLED_KEYS: u32 = 60;
pub const PPM_PR_PAC_GET_ENABLED_KEYS: u32 = 61;
pub const PPM_PR_SCHED_CORE: u32 = 62;
pub const PPM_PR_SME_SET_VL: u32 = 63;
pub const PPM_PR_SME_GET_VL: u32 = 64;
pub const PPM_PR_SET_VMA: u32 = 1398164801;
pub const RLIM_INFINITY: i32 = -1;
pub const PPM_CAP_CHOWN: u32 = 1;
pub const PPM_CAP_DAC_OVERRIDE: u32 = 2;
pub const PPM_CAP_DAC_READ_SEARCH: u32 = 4;
pub const PPM_CAP_FOWNER: u32 = 8;
pub const PPM_CAP_FSETID: u32 = 16;
pub const PPM_CAP_KILL: u32 = 32;
pub const PPM_CAP_SETGID: u32 = 64;
pub const PPM_CAP_SETUID: u32 = 128;
pub const PPM_CAP_SETPCAP: u32 = 256;
pub const PPM_CAP_LINUX_IMMUTABLE: u32 = 512;
pub const PPM_CAP_NET_BIND_SERVICE: u32 = 1024;
pub const PPM_CAP_NET_BROADCAST: u32 = 2048;
pub const PPM_CAP_NET_ADMIN: u32 = 4096;
pub const PPM_CAP_NET_RAW: u32 = 8192;
pub const PPM_CAP_IPC_LOCK: u32 = 16384;
pub const PPM_CAP_IPC_OWNER: u32 = 32768;
pub const PPM_CAP_SYS_MODULE: u32 = 65536;
pub const PPM_CAP_SYS_RAWIO: u32 = 131072;
pub const PPM_CAP_SYS_CHROOT: u32 = 262144;
pub const PPM_CAP_SYS_PTRACE: u32 = 524288;
pub const PPM_CAP_SYS_PACCT: u32 = 1048576;
pub const PPM_CAP_SYS_ADMIN: u32 = 2097152;
pub const PPM_CAP_SYS_BOOT: u32 = 4194304;
pub const PPM_CAP_SYS_NICE: u32 = 8388608;
pub const PPM_CAP_SYS_RESOURCE: u32 = 16777216;
pub const PPM_CAP_SYS_TIME: u32 = 33554432;
pub const PPM_CAP_SYS_TTY_CONFIG: u32 = 67108864;
pub const PPM_CAP_MKNOD: u32 = 134217728;
pub const PPM_CAP_LEASE: u32 = 268435456;
pub const PPM_CAP_AUDIT_WRITE: u32 = 536870912;
pub const PPM_CAP_AUDIT_CONTROL: u32 = 1073741824;
pub const PPM_CAP_SETFCAP: u32 = 2147483648;
pub const PPM_CAP_MAC_OVERRIDE: u64 = 4294967296;
pub const PPM_CAP_MAC_ADMIN: u64 = 8589934592;
pub const PPM_CAP_SYSLOG: u64 = 17179869184;
pub const PPM_CAP_WAKE_ALARM: u64 = 34359738368;
pub const PPM_CAP_BLOCK_SUSPEND: u64 = 68719476736;
pub const PPM_CAP_AUDIT_READ: u64 = 137438953472;
pub const PPM_CAP_PERFMON: u64 = 274877906944;
pub const PPM_CAP_BPF: u64 = 549755813888;
pub const PPM_CAP_CHECKPOINT_RESTORE: u64 = 1099511627776;
pub const _STK_LIM_MAX: i32 = -1;
pub const PPME_DIRECTION_FLAG: u32 = 1;
pub const PPM_IOCTL_MAGIC: u8 = 115u8;
pub const SYSCALL_TABLE_SIZE: u32 = 512;
pub const PPM_MAX_AUTOFILL_ARGS: u32 = 4;
pub const PPM_MAX_ARG_SIZE: u32 = 65000;
pub const AF_ID_RETVAL: i32 = -1;
pub const AF_ID_USEDEFAULT: i32 = -2;
pub const PRB_FLAG_PUSH_SIZE: u32 = 1;
pub const PRB_FLAG_PUSH_DATA: u32 = 2;
pub const PRB_FLAG_PUSH_ALL: u32 = 3;
pub const PRB_FLAG_IS_WRITE: u32 = 4;
pub const PPM_SUCCESS: u32 = 0;
pub const PPM_FAILURE_BUFFER_FULL: i32 = -1;
pub const PPM_FAILURE_INVALID_USER_MEMORY: i32 = -2;
pub const PPM_FAILURE_BUG: i32 = -3;
pub const PPM_SKIP_EVENT: i32 = -4;
pub const PPM_FAILURE_FRAME_SCRATCH_MAP_FULL: i32 = -5;
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __intmax_t = ::std::os::raw::c_long;
pub type __uintmax_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __fsid_t"][::std::mem::size_of::<__fsid_t>() - 8usize];
    ["Alignment of __fsid_t"][::std::mem::align_of::<__fsid_t>() - 4usize];
    ["Offset of field: __fsid_t::__val"][::std::mem::offset_of!(__fsid_t, __val) - 0usize];
};
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __suseconds64_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type __sig_atomic_t = ::std::os::raw::c_int;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
pub const ppm_capture_category_PPMC_NONE: ppm_capture_category = 0;
pub const ppm_capture_category_PPMC_SYSCALL: ppm_capture_category = 1;
pub const ppm_capture_category_PPMC_CONTEXT_SWITCH: ppm_capture_category = 2;
pub const ppm_capture_category_PPMC_SIGNAL: ppm_capture_category = 3;
pub const ppm_capture_category_PPMC_PAGE_FAULT: ppm_capture_category = 4;
pub const ppm_capture_category_PPMC_SCHED_PROC_EXEC: ppm_capture_category = 5;
pub const ppm_capture_category_PPMC_SCHED_PROC_FORK: ppm_capture_category = 6;
pub type ppm_capture_category = ::std::os::raw::c_uint;
pub const ppm_overlay_PPM_NOT_OVERLAY_FS: ppm_overlay = 0;
pub const ppm_overlay_PPM_OVERLAY_UPPER: ppm_overlay = 1;
pub const ppm_overlay_PPM_OVERLAY_LOWER: ppm_overlay = 2;
pub type ppm_overlay = ::std::os::raw::c_uint;
pub const ppm_event_code_PPME_GENERIC_E: ppm_event_code = 0;
pub const ppm_event_code_PPME_GENERIC_X: ppm_event_code = 1;
pub const ppm_event_code_PPME_SYSCALL_OPEN_E: ppm_event_code = 2;
pub const ppm_event_code_PPME_SYSCALL_OPEN_X: ppm_event_code = 3;
pub const ppm_event_code_PPME_SYSCALL_CLOSE_E: ppm_event_code = 4;
pub const ppm_event_code_PPME_SYSCALL_CLOSE_X: ppm_event_code = 5;
pub const ppm_event_code_PPME_SYSCALL_READ_E: ppm_event_code = 6;
pub const ppm_event_code_PPME_SYSCALL_READ_X: ppm_event_code = 7;
pub const ppm_event_code_PPME_SYSCALL_WRITE_E: ppm_event_code = 8;
pub const ppm_event_code_PPME_SYSCALL_WRITE_X: ppm_event_code = 9;
pub const ppm_event_code_PPME_SYSCALL_BRK_1_E: ppm_event_code = 10;
pub const ppm_event_code_PPME_SYSCALL_BRK_1_X: ppm_event_code = 11;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_8_E: ppm_event_code = 12;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_8_X: ppm_event_code = 13;
pub const ppm_event_code_PPME_SYSCALL_CLONE_11_E: ppm_event_code = 14;
pub const ppm_event_code_PPME_SYSCALL_CLONE_11_X: ppm_event_code = 15;
pub const ppm_event_code_PPME_PROCEXIT_E: ppm_event_code = 16;
pub const ppm_event_code_PPME_PROCEXIT_X: ppm_event_code = 17;
pub const ppm_event_code_PPME_SOCKET_SOCKET_E: ppm_event_code = 18;
pub const ppm_event_code_PPME_SOCKET_SOCKET_X: ppm_event_code = 19;
pub const ppm_event_code_PPME_SOCKET_BIND_E: ppm_event_code = 20;
pub const ppm_event_code_PPME_SOCKET_BIND_X: ppm_event_code = 21;
pub const ppm_event_code_PPME_SOCKET_CONNECT_E: ppm_event_code = 22;
pub const ppm_event_code_PPME_SOCKET_CONNECT_X: ppm_event_code = 23;
pub const ppm_event_code_PPME_SOCKET_LISTEN_E: ppm_event_code = 24;
pub const ppm_event_code_PPME_SOCKET_LISTEN_X: ppm_event_code = 25;
pub const ppm_event_code_PPME_SOCKET_ACCEPT_E: ppm_event_code = 26;
pub const ppm_event_code_PPME_SOCKET_ACCEPT_X: ppm_event_code = 27;
pub const ppm_event_code_PPME_SOCKET_SEND_E: ppm_event_code = 28;
pub const ppm_event_code_PPME_SOCKET_SEND_X: ppm_event_code = 29;
pub const ppm_event_code_PPME_SOCKET_SENDTO_E: ppm_event_code = 30;
pub const ppm_event_code_PPME_SOCKET_SENDTO_X: ppm_event_code = 31;
pub const ppm_event_code_PPME_SOCKET_RECV_E: ppm_event_code = 32;
pub const ppm_event_code_PPME_SOCKET_RECV_X: ppm_event_code = 33;
pub const ppm_event_code_PPME_SOCKET_RECVFROM_E: ppm_event_code = 34;
pub const ppm_event_code_PPME_SOCKET_RECVFROM_X: ppm_event_code = 35;
pub const ppm_event_code_PPME_SOCKET_SHUTDOWN_E: ppm_event_code = 36;
pub const ppm_event_code_PPME_SOCKET_SHUTDOWN_X: ppm_event_code = 37;
pub const ppm_event_code_PPME_SOCKET_GETSOCKNAME_E: ppm_event_code = 38;
pub const ppm_event_code_PPME_SOCKET_GETSOCKNAME_X: ppm_event_code = 39;
pub const ppm_event_code_PPME_SOCKET_GETPEERNAME_E: ppm_event_code = 40;
pub const ppm_event_code_PPME_SOCKET_GETPEERNAME_X: ppm_event_code = 41;
pub const ppm_event_code_PPME_SOCKET_SOCKETPAIR_E: ppm_event_code = 42;
pub const ppm_event_code_PPME_SOCKET_SOCKETPAIR_X: ppm_event_code = 43;
pub const ppm_event_code_PPME_SOCKET_SETSOCKOPT_E: ppm_event_code = 44;
pub const ppm_event_code_PPME_SOCKET_SETSOCKOPT_X: ppm_event_code = 45;
pub const ppm_event_code_PPME_SOCKET_GETSOCKOPT_E: ppm_event_code = 46;
pub const ppm_event_code_PPME_SOCKET_GETSOCKOPT_X: ppm_event_code = 47;
pub const ppm_event_code_PPME_SOCKET_SENDMSG_E: ppm_event_code = 48;
pub const ppm_event_code_PPME_SOCKET_SENDMSG_X: ppm_event_code = 49;
pub const ppm_event_code_PPME_SOCKET_SENDMMSG_E: ppm_event_code = 50;
pub const ppm_event_code_PPME_SOCKET_SENDMMSG_X: ppm_event_code = 51;
pub const ppm_event_code_PPME_SOCKET_RECVMSG_E: ppm_event_code = 52;
pub const ppm_event_code_PPME_SOCKET_RECVMSG_X: ppm_event_code = 53;
pub const ppm_event_code_PPME_SOCKET_RECVMMSG_E: ppm_event_code = 54;
pub const ppm_event_code_PPME_SOCKET_RECVMMSG_X: ppm_event_code = 55;
pub const ppm_event_code_PPME_SOCKET_ACCEPT4_E: ppm_event_code = 56;
pub const ppm_event_code_PPME_SOCKET_ACCEPT4_X: ppm_event_code = 57;
pub const ppm_event_code_PPME_SYSCALL_CREAT_E: ppm_event_code = 58;
pub const ppm_event_code_PPME_SYSCALL_CREAT_X: ppm_event_code = 59;
pub const ppm_event_code_PPME_SYSCALL_PIPE_E: ppm_event_code = 60;
pub const ppm_event_code_PPME_SYSCALL_PIPE_X: ppm_event_code = 61;
pub const ppm_event_code_PPME_SYSCALL_EVENTFD_E: ppm_event_code = 62;
pub const ppm_event_code_PPME_SYSCALL_EVENTFD_X: ppm_event_code = 63;
pub const ppm_event_code_PPME_SYSCALL_FUTEX_E: ppm_event_code = 64;
pub const ppm_event_code_PPME_SYSCALL_FUTEX_X: ppm_event_code = 65;
pub const ppm_event_code_PPME_SYSCALL_STAT_E: ppm_event_code = 66;
pub const ppm_event_code_PPME_SYSCALL_STAT_X: ppm_event_code = 67;
pub const ppm_event_code_PPME_SYSCALL_LSTAT_E: ppm_event_code = 68;
pub const ppm_event_code_PPME_SYSCALL_LSTAT_X: ppm_event_code = 69;
pub const ppm_event_code_PPME_SYSCALL_FSTAT_E: ppm_event_code = 70;
pub const ppm_event_code_PPME_SYSCALL_FSTAT_X: ppm_event_code = 71;
pub const ppm_event_code_PPME_SYSCALL_STAT64_E: ppm_event_code = 72;
pub const ppm_event_code_PPME_SYSCALL_STAT64_X: ppm_event_code = 73;
pub const ppm_event_code_PPME_SYSCALL_LSTAT64_E: ppm_event_code = 74;
pub const ppm_event_code_PPME_SYSCALL_LSTAT64_X: ppm_event_code = 75;
pub const ppm_event_code_PPME_SYSCALL_FSTAT64_E: ppm_event_code = 76;
pub const ppm_event_code_PPME_SYSCALL_FSTAT64_X: ppm_event_code = 77;
pub const ppm_event_code_PPME_SYSCALL_EPOLLWAIT_E: ppm_event_code = 78;
pub const ppm_event_code_PPME_SYSCALL_EPOLLWAIT_X: ppm_event_code = 79;
pub const ppm_event_code_PPME_SYSCALL_POLL_E: ppm_event_code = 80;
pub const ppm_event_code_PPME_SYSCALL_POLL_X: ppm_event_code = 81;
pub const ppm_event_code_PPME_SYSCALL_SELECT_E: ppm_event_code = 82;
pub const ppm_event_code_PPME_SYSCALL_SELECT_X: ppm_event_code = 83;
pub const ppm_event_code_PPME_SYSCALL_NEWSELECT_E: ppm_event_code = 84;
pub const ppm_event_code_PPME_SYSCALL_NEWSELECT_X: ppm_event_code = 85;
pub const ppm_event_code_PPME_SYSCALL_LSEEK_E: ppm_event_code = 86;
pub const ppm_event_code_PPME_SYSCALL_LSEEK_X: ppm_event_code = 87;
pub const ppm_event_code_PPME_SYSCALL_LLSEEK_E: ppm_event_code = 88;
pub const ppm_event_code_PPME_SYSCALL_LLSEEK_X: ppm_event_code = 89;
pub const ppm_event_code_PPME_SYSCALL_IOCTL_2_E: ppm_event_code = 90;
pub const ppm_event_code_PPME_SYSCALL_IOCTL_2_X: ppm_event_code = 91;
pub const ppm_event_code_PPME_SYSCALL_GETCWD_E: ppm_event_code = 92;
pub const ppm_event_code_PPME_SYSCALL_GETCWD_X: ppm_event_code = 93;
pub const ppm_event_code_PPME_SYSCALL_CHDIR_E: ppm_event_code = 94;
pub const ppm_event_code_PPME_SYSCALL_CHDIR_X: ppm_event_code = 95;
pub const ppm_event_code_PPME_SYSCALL_FCHDIR_E: ppm_event_code = 96;
pub const ppm_event_code_PPME_SYSCALL_FCHDIR_X: ppm_event_code = 97;
pub const ppm_event_code_PPME_SYSCALL_MKDIR_E: ppm_event_code = 98;
pub const ppm_event_code_PPME_SYSCALL_MKDIR_X: ppm_event_code = 99;
pub const ppm_event_code_PPME_SYSCALL_RMDIR_E: ppm_event_code = 100;
pub const ppm_event_code_PPME_SYSCALL_RMDIR_X: ppm_event_code = 101;
pub const ppm_event_code_PPME_SYSCALL_OPENAT_E: ppm_event_code = 102;
pub const ppm_event_code_PPME_SYSCALL_OPENAT_X: ppm_event_code = 103;
pub const ppm_event_code_PPME_SYSCALL_LINK_E: ppm_event_code = 104;
pub const ppm_event_code_PPME_SYSCALL_LINK_X: ppm_event_code = 105;
pub const ppm_event_code_PPME_SYSCALL_LINKAT_E: ppm_event_code = 106;
pub const ppm_event_code_PPME_SYSCALL_LINKAT_X: ppm_event_code = 107;
pub const ppm_event_code_PPME_SYSCALL_UNLINK_E: ppm_event_code = 108;
pub const ppm_event_code_PPME_SYSCALL_UNLINK_X: ppm_event_code = 109;
pub const ppm_event_code_PPME_SYSCALL_UNLINKAT_E: ppm_event_code = 110;
pub const ppm_event_code_PPME_SYSCALL_UNLINKAT_X: ppm_event_code = 111;
pub const ppm_event_code_PPME_SYSCALL_PREAD_E: ppm_event_code = 112;
pub const ppm_event_code_PPME_SYSCALL_PREAD_X: ppm_event_code = 113;
pub const ppm_event_code_PPME_SYSCALL_PWRITE_E: ppm_event_code = 114;
pub const ppm_event_code_PPME_SYSCALL_PWRITE_X: ppm_event_code = 115;
pub const ppm_event_code_PPME_SYSCALL_READV_E: ppm_event_code = 116;
pub const ppm_event_code_PPME_SYSCALL_READV_X: ppm_event_code = 117;
pub const ppm_event_code_PPME_SYSCALL_WRITEV_E: ppm_event_code = 118;
pub const ppm_event_code_PPME_SYSCALL_WRITEV_X: ppm_event_code = 119;
pub const ppm_event_code_PPME_SYSCALL_PREADV_E: ppm_event_code = 120;
pub const ppm_event_code_PPME_SYSCALL_PREADV_X: ppm_event_code = 121;
pub const ppm_event_code_PPME_SYSCALL_PWRITEV_E: ppm_event_code = 122;
pub const ppm_event_code_PPME_SYSCALL_PWRITEV_X: ppm_event_code = 123;
pub const ppm_event_code_PPME_SYSCALL_DUP_E: ppm_event_code = 124;
pub const ppm_event_code_PPME_SYSCALL_DUP_X: ppm_event_code = 125;
pub const ppm_event_code_PPME_SYSCALL_SIGNALFD_E: ppm_event_code = 126;
pub const ppm_event_code_PPME_SYSCALL_SIGNALFD_X: ppm_event_code = 127;
pub const ppm_event_code_PPME_SYSCALL_KILL_E: ppm_event_code = 128;
pub const ppm_event_code_PPME_SYSCALL_KILL_X: ppm_event_code = 129;
pub const ppm_event_code_PPME_SYSCALL_TKILL_E: ppm_event_code = 130;
pub const ppm_event_code_PPME_SYSCALL_TKILL_X: ppm_event_code = 131;
pub const ppm_event_code_PPME_SYSCALL_TGKILL_E: ppm_event_code = 132;
pub const ppm_event_code_PPME_SYSCALL_TGKILL_X: ppm_event_code = 133;
pub const ppm_event_code_PPME_SYSCALL_NANOSLEEP_E: ppm_event_code = 134;
pub const ppm_event_code_PPME_SYSCALL_NANOSLEEP_X: ppm_event_code = 135;
pub const ppm_event_code_PPME_SYSCALL_TIMERFD_CREATE_E: ppm_event_code = 136;
pub const ppm_event_code_PPME_SYSCALL_TIMERFD_CREATE_X: ppm_event_code = 137;
pub const ppm_event_code_PPME_SYSCALL_INOTIFY_INIT_E: ppm_event_code = 138;
pub const ppm_event_code_PPME_SYSCALL_INOTIFY_INIT_X: ppm_event_code = 139;
pub const ppm_event_code_PPME_SYSCALL_GETRLIMIT_E: ppm_event_code = 140;
pub const ppm_event_code_PPME_SYSCALL_GETRLIMIT_X: ppm_event_code = 141;
pub const ppm_event_code_PPME_SYSCALL_SETRLIMIT_E: ppm_event_code = 142;
pub const ppm_event_code_PPME_SYSCALL_SETRLIMIT_X: ppm_event_code = 143;
pub const ppm_event_code_PPME_SYSCALL_PRLIMIT_E: ppm_event_code = 144;
pub const ppm_event_code_PPME_SYSCALL_PRLIMIT_X: ppm_event_code = 145;
pub const ppm_event_code_PPME_SCHEDSWITCH_1_E: ppm_event_code = 146;
pub const ppm_event_code_PPME_SCHEDSWITCH_1_X: ppm_event_code = 147;
pub const ppm_event_code_PPME_DROP_E: ppm_event_code = 148;
pub const ppm_event_code_PPME_DROP_X: ppm_event_code = 149;
pub const ppm_event_code_PPME_SYSCALL_FCNTL_E: ppm_event_code = 150;
pub const ppm_event_code_PPME_SYSCALL_FCNTL_X: ppm_event_code = 151;
pub const ppm_event_code_PPME_SCHEDSWITCH_6_E: ppm_event_code = 152;
pub const ppm_event_code_PPME_SCHEDSWITCH_6_X: ppm_event_code = 153;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_13_E: ppm_event_code = 154;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_13_X: ppm_event_code = 155;
pub const ppm_event_code_PPME_SYSCALL_CLONE_16_E: ppm_event_code = 156;
pub const ppm_event_code_PPME_SYSCALL_CLONE_16_X: ppm_event_code = 157;
pub const ppm_event_code_PPME_SYSCALL_BRK_4_E: ppm_event_code = 158;
pub const ppm_event_code_PPME_SYSCALL_BRK_4_X: ppm_event_code = 159;
pub const ppm_event_code_PPME_SYSCALL_MMAP_E: ppm_event_code = 160;
pub const ppm_event_code_PPME_SYSCALL_MMAP_X: ppm_event_code = 161;
pub const ppm_event_code_PPME_SYSCALL_MMAP2_E: ppm_event_code = 162;
pub const ppm_event_code_PPME_SYSCALL_MMAP2_X: ppm_event_code = 163;
pub const ppm_event_code_PPME_SYSCALL_MUNMAP_E: ppm_event_code = 164;
pub const ppm_event_code_PPME_SYSCALL_MUNMAP_X: ppm_event_code = 165;
pub const ppm_event_code_PPME_SYSCALL_SPLICE_E: ppm_event_code = 166;
pub const ppm_event_code_PPME_SYSCALL_SPLICE_X: ppm_event_code = 167;
pub const ppm_event_code_PPME_SYSCALL_PTRACE_E: ppm_event_code = 168;
pub const ppm_event_code_PPME_SYSCALL_PTRACE_X: ppm_event_code = 169;
pub const ppm_event_code_PPME_SYSCALL_IOCTL_3_E: ppm_event_code = 170;
pub const ppm_event_code_PPME_SYSCALL_IOCTL_3_X: ppm_event_code = 171;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_14_E: ppm_event_code = 172;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_14_X: ppm_event_code = 173;
pub const ppm_event_code_PPME_SYSCALL_RENAME_E: ppm_event_code = 174;
pub const ppm_event_code_PPME_SYSCALL_RENAME_X: ppm_event_code = 175;
pub const ppm_event_code_PPME_SYSCALL_RENAMEAT_E: ppm_event_code = 176;
pub const ppm_event_code_PPME_SYSCALL_RENAMEAT_X: ppm_event_code = 177;
pub const ppm_event_code_PPME_SYSCALL_SYMLINK_E: ppm_event_code = 178;
pub const ppm_event_code_PPME_SYSCALL_SYMLINK_X: ppm_event_code = 179;
pub const ppm_event_code_PPME_SYSCALL_SYMLINKAT_E: ppm_event_code = 180;
pub const ppm_event_code_PPME_SYSCALL_SYMLINKAT_X: ppm_event_code = 181;
pub const ppm_event_code_PPME_SYSCALL_FORK_E: ppm_event_code = 182;
pub const ppm_event_code_PPME_SYSCALL_FORK_X: ppm_event_code = 183;
pub const ppm_event_code_PPME_SYSCALL_VFORK_E: ppm_event_code = 184;
pub const ppm_event_code_PPME_SYSCALL_VFORK_X: ppm_event_code = 185;
pub const ppm_event_code_PPME_PROCEXIT_1_E: ppm_event_code = 186;
pub const ppm_event_code_PPME_PROCEXIT_1_X: ppm_event_code = 187;
pub const ppm_event_code_PPME_SYSCALL_SENDFILE_E: ppm_event_code = 188;
pub const ppm_event_code_PPME_SYSCALL_SENDFILE_X: ppm_event_code = 189;
pub const ppm_event_code_PPME_SYSCALL_QUOTACTL_E: ppm_event_code = 190;
pub const ppm_event_code_PPME_SYSCALL_QUOTACTL_X: ppm_event_code = 191;
pub const ppm_event_code_PPME_SYSCALL_SETRESUID_E: ppm_event_code = 192;
pub const ppm_event_code_PPME_SYSCALL_SETRESUID_X: ppm_event_code = 193;
pub const ppm_event_code_PPME_SYSCALL_SETRESGID_E: ppm_event_code = 194;
pub const ppm_event_code_PPME_SYSCALL_SETRESGID_X: ppm_event_code = 195;
pub const ppm_event_code_PPME_SCAPEVENT_E: ppm_event_code = 196;
pub const ppm_event_code_PPME_SCAPEVENT_X: ppm_event_code = 197;
pub const ppm_event_code_PPME_SYSCALL_SETUID_E: ppm_event_code = 198;
pub const ppm_event_code_PPME_SYSCALL_SETUID_X: ppm_event_code = 199;
pub const ppm_event_code_PPME_SYSCALL_SETGID_E: ppm_event_code = 200;
pub const ppm_event_code_PPME_SYSCALL_SETGID_X: ppm_event_code = 201;
pub const ppm_event_code_PPME_SYSCALL_GETUID_E: ppm_event_code = 202;
pub const ppm_event_code_PPME_SYSCALL_GETUID_X: ppm_event_code = 203;
pub const ppm_event_code_PPME_SYSCALL_GETEUID_E: ppm_event_code = 204;
pub const ppm_event_code_PPME_SYSCALL_GETEUID_X: ppm_event_code = 205;
pub const ppm_event_code_PPME_SYSCALL_GETGID_E: ppm_event_code = 206;
pub const ppm_event_code_PPME_SYSCALL_GETGID_X: ppm_event_code = 207;
pub const ppm_event_code_PPME_SYSCALL_GETEGID_E: ppm_event_code = 208;
pub const ppm_event_code_PPME_SYSCALL_GETEGID_X: ppm_event_code = 209;
pub const ppm_event_code_PPME_SYSCALL_GETRESUID_E: ppm_event_code = 210;
pub const ppm_event_code_PPME_SYSCALL_GETRESUID_X: ppm_event_code = 211;
pub const ppm_event_code_PPME_SYSCALL_GETRESGID_E: ppm_event_code = 212;
pub const ppm_event_code_PPME_SYSCALL_GETRESGID_X: ppm_event_code = 213;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_15_E: ppm_event_code = 214;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_15_X: ppm_event_code = 215;
pub const ppm_event_code_PPME_SYSCALL_CLONE_17_E: ppm_event_code = 216;
pub const ppm_event_code_PPME_SYSCALL_CLONE_17_X: ppm_event_code = 217;
pub const ppm_event_code_PPME_SYSCALL_FORK_17_E: ppm_event_code = 218;
pub const ppm_event_code_PPME_SYSCALL_FORK_17_X: ppm_event_code = 219;
pub const ppm_event_code_PPME_SYSCALL_VFORK_17_E: ppm_event_code = 220;
pub const ppm_event_code_PPME_SYSCALL_VFORK_17_X: ppm_event_code = 221;
pub const ppm_event_code_PPME_SYSCALL_CLONE_20_E: ppm_event_code = 222;
pub const ppm_event_code_PPME_SYSCALL_CLONE_20_X: ppm_event_code = 223;
pub const ppm_event_code_PPME_SYSCALL_FORK_20_E: ppm_event_code = 224;
pub const ppm_event_code_PPME_SYSCALL_FORK_20_X: ppm_event_code = 225;
pub const ppm_event_code_PPME_SYSCALL_VFORK_20_E: ppm_event_code = 226;
pub const ppm_event_code_PPME_SYSCALL_VFORK_20_X: ppm_event_code = 227;
pub const ppm_event_code_PPME_CONTAINER_E: ppm_event_code = 228;
pub const ppm_event_code_PPME_CONTAINER_X: ppm_event_code = 229;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_16_E: ppm_event_code = 230;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_16_X: ppm_event_code = 231;
pub const ppm_event_code_PPME_SIGNALDELIVER_E: ppm_event_code = 232;
pub const ppm_event_code_PPME_SIGNALDELIVER_X: ppm_event_code = 233;
pub const ppm_event_code_PPME_PROCINFO_E: ppm_event_code = 234;
pub const ppm_event_code_PPME_PROCINFO_X: ppm_event_code = 235;
pub const ppm_event_code_PPME_SYSCALL_GETDENTS_E: ppm_event_code = 236;
pub const ppm_event_code_PPME_SYSCALL_GETDENTS_X: ppm_event_code = 237;
pub const ppm_event_code_PPME_SYSCALL_GETDENTS64_E: ppm_event_code = 238;
pub const ppm_event_code_PPME_SYSCALL_GETDENTS64_X: ppm_event_code = 239;
pub const ppm_event_code_PPME_SYSCALL_SETNS_E: ppm_event_code = 240;
pub const ppm_event_code_PPME_SYSCALL_SETNS_X: ppm_event_code = 241;
pub const ppm_event_code_PPME_SYSCALL_FLOCK_E: ppm_event_code = 242;
pub const ppm_event_code_PPME_SYSCALL_FLOCK_X: ppm_event_code = 243;
pub const ppm_event_code_PPME_CPU_HOTPLUG_E: ppm_event_code = 244;
pub const ppm_event_code_PPME_CPU_HOTPLUG_X: ppm_event_code = 245;
pub const ppm_event_code_PPME_SOCKET_ACCEPT_5_E: ppm_event_code = 246;
pub const ppm_event_code_PPME_SOCKET_ACCEPT_5_X: ppm_event_code = 247;
pub const ppm_event_code_PPME_SOCKET_ACCEPT4_5_E: ppm_event_code = 248;
pub const ppm_event_code_PPME_SOCKET_ACCEPT4_5_X: ppm_event_code = 249;
pub const ppm_event_code_PPME_SYSCALL_SEMOP_E: ppm_event_code = 250;
pub const ppm_event_code_PPME_SYSCALL_SEMOP_X: ppm_event_code = 251;
pub const ppm_event_code_PPME_SYSCALL_SEMCTL_E: ppm_event_code = 252;
pub const ppm_event_code_PPME_SYSCALL_SEMCTL_X: ppm_event_code = 253;
pub const ppm_event_code_PPME_SYSCALL_PPOLL_E: ppm_event_code = 254;
pub const ppm_event_code_PPME_SYSCALL_PPOLL_X: ppm_event_code = 255;
pub const ppm_event_code_PPME_SYSCALL_MOUNT_E: ppm_event_code = 256;
pub const ppm_event_code_PPME_SYSCALL_MOUNT_X: ppm_event_code = 257;
pub const ppm_event_code_PPME_SYSCALL_UMOUNT_E: ppm_event_code = 258;
pub const ppm_event_code_PPME_SYSCALL_UMOUNT_X: ppm_event_code = 259;
pub const ppm_event_code_PPME_K8S_E: ppm_event_code = 260;
pub const ppm_event_code_PPME_K8S_X: ppm_event_code = 261;
pub const ppm_event_code_PPME_SYSCALL_SEMGET_E: ppm_event_code = 262;
pub const ppm_event_code_PPME_SYSCALL_SEMGET_X: ppm_event_code = 263;
pub const ppm_event_code_PPME_SYSCALL_ACCESS_E: ppm_event_code = 264;
pub const ppm_event_code_PPME_SYSCALL_ACCESS_X: ppm_event_code = 265;
pub const ppm_event_code_PPME_SYSCALL_CHROOT_E: ppm_event_code = 266;
pub const ppm_event_code_PPME_SYSCALL_CHROOT_X: ppm_event_code = 267;
pub const ppm_event_code_PPME_TRACER_E: ppm_event_code = 268;
pub const ppm_event_code_PPME_TRACER_X: ppm_event_code = 269;
pub const ppm_event_code_PPME_MESOS_E: ppm_event_code = 270;
pub const ppm_event_code_PPME_MESOS_X: ppm_event_code = 271;
pub const ppm_event_code_PPME_CONTAINER_JSON_E: ppm_event_code = 272;
pub const ppm_event_code_PPME_CONTAINER_JSON_X: ppm_event_code = 273;
pub const ppm_event_code_PPME_SYSCALL_SETSID_E: ppm_event_code = 274;
pub const ppm_event_code_PPME_SYSCALL_SETSID_X: ppm_event_code = 275;
pub const ppm_event_code_PPME_SYSCALL_MKDIR_2_E: ppm_event_code = 276;
pub const ppm_event_code_PPME_SYSCALL_MKDIR_2_X: ppm_event_code = 277;
pub const ppm_event_code_PPME_SYSCALL_RMDIR_2_E: ppm_event_code = 278;
pub const ppm_event_code_PPME_SYSCALL_RMDIR_2_X: ppm_event_code = 279;
pub const ppm_event_code_PPME_NOTIFICATION_E: ppm_event_code = 280;
pub const ppm_event_code_PPME_NOTIFICATION_X: ppm_event_code = 281;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_17_E: ppm_event_code = 282;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_17_X: ppm_event_code = 283;
pub const ppm_event_code_PPME_SYSCALL_UNSHARE_E: ppm_event_code = 284;
pub const ppm_event_code_PPME_SYSCALL_UNSHARE_X: ppm_event_code = 285;
pub const ppm_event_code_PPME_INFRASTRUCTURE_EVENT_E: ppm_event_code = 286;
pub const ppm_event_code_PPME_INFRASTRUCTURE_EVENT_X: ppm_event_code = 287;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_18_E: ppm_event_code = 288;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_18_X: ppm_event_code = 289;
pub const ppm_event_code_PPME_PAGE_FAULT_E: ppm_event_code = 290;
pub const ppm_event_code_PPME_PAGE_FAULT_X: ppm_event_code = 291;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_19_E: ppm_event_code = 292;
pub const ppm_event_code_PPME_SYSCALL_EXECVE_19_X: ppm_event_code = 293;
pub const ppm_event_code_PPME_SYSCALL_SETPGID_E: ppm_event_code = 294;
pub const ppm_event_code_PPME_SYSCALL_SETPGID_X: ppm_event_code = 295;
pub const ppm_event_code_PPME_SYSCALL_BPF_E: ppm_event_code = 296;
pub const ppm_event_code_PPME_SYSCALL_BPF_X: ppm_event_code = 297;
pub const ppm_event_code_PPME_SYSCALL_SECCOMP_E: ppm_event_code = 298;
pub const ppm_event_code_PPME_SYSCALL_SECCOMP_X: ppm_event_code = 299;
pub const ppm_event_code_PPME_SYSCALL_UNLINK_2_E: ppm_event_code = 300;
pub const ppm_event_code_PPME_SYSCALL_UNLINK_2_X: ppm_event_code = 301;
pub const ppm_event_code_PPME_SYSCALL_UNLINKAT_2_E: ppm_event_code = 302;
pub const ppm_event_code_PPME_SYSCALL_UNLINKAT_2_X: ppm_event_code = 303;
pub const ppm_event_code_PPME_SYSCALL_MKDIRAT_E: ppm_event_code = 304;
pub const ppm_event_code_PPME_SYSCALL_MKDIRAT_X: ppm_event_code = 305;
pub const ppm_event_code_PPME_SYSCALL_OPENAT_2_E: ppm_event_code = 306;
pub const ppm_event_code_PPME_SYSCALL_OPENAT_2_X: ppm_event_code = 307;
pub const ppm_event_code_PPME_SYSCALL_LINK_2_E: ppm_event_code = 308;
pub const ppm_event_code_PPME_SYSCALL_LINK_2_X: ppm_event_code = 309;
pub const ppm_event_code_PPME_SYSCALL_LINKAT_2_E: ppm_event_code = 310;
pub const ppm_event_code_PPME_SYSCALL_LINKAT_2_X: ppm_event_code = 311;
pub const ppm_event_code_PPME_SYSCALL_FCHMODAT_E: ppm_event_code = 312;
pub const ppm_event_code_PPME_SYSCALL_FCHMODAT_X: ppm_event_code = 313;
pub const ppm_event_code_PPME_SYSCALL_CHMOD_E: ppm_event_code = 314;
pub const ppm_event_code_PPME_SYSCALL_CHMOD_X: ppm_event_code = 315;
pub const ppm_event_code_PPME_SYSCALL_FCHMOD_E: ppm_event_code = 316;
pub const ppm_event_code_PPME_SYSCALL_FCHMOD_X: ppm_event_code = 317;
pub const ppm_event_code_PPME_SYSCALL_RENAMEAT2_E: ppm_event_code = 318;
pub const ppm_event_code_PPME_SYSCALL_RENAMEAT2_X: ppm_event_code = 319;
pub const ppm_event_code_PPME_SYSCALL_USERFAULTFD_E: ppm_event_code = 320;
pub const ppm_event_code_PPME_SYSCALL_USERFAULTFD_X: ppm_event_code = 321;
pub const ppm_event_code_PPME_PLUGINEVENT_E: ppm_event_code = 322;
pub const ppm_event_code_PPME_PLUGINEVENT_X: ppm_event_code = 323;
pub const ppm_event_code_PPME_CONTAINER_JSON_2_E: ppm_event_code = 324;
pub const ppm_event_code_PPME_CONTAINER_JSON_2_X: ppm_event_code = 325;
pub const ppm_event_code_PPME_SYSCALL_OPENAT2_E: ppm_event_code = 326;
pub const ppm_event_code_PPME_SYSCALL_OPENAT2_X: ppm_event_code = 327;
pub const ppm_event_code_PPME_SYSCALL_MPROTECT_E: ppm_event_code = 328;
pub const ppm_event_code_PPME_SYSCALL_MPROTECT_X: ppm_event_code = 329;
pub const ppm_event_code_PPME_SYSCALL_EXECVEAT_E: ppm_event_code = 330;
pub const ppm_event_code_PPME_SYSCALL_EXECVEAT_X: ppm_event_code = 331;
pub const ppm_event_code_PPME_SYSCALL_COPY_FILE_RANGE_E: ppm_event_code = 332;
pub const ppm_event_code_PPME_SYSCALL_COPY_FILE_RANGE_X: ppm_event_code = 333;
pub const ppm_event_code_PPME_SYSCALL_CLONE3_E: ppm_event_code = 334;
pub const ppm_event_code_PPME_SYSCALL_CLONE3_X: ppm_event_code = 335;
pub const ppm_event_code_PPME_SYSCALL_OPEN_BY_HANDLE_AT_E: ppm_event_code = 336;
pub const ppm_event_code_PPME_SYSCALL_OPEN_BY_HANDLE_AT_X: ppm_event_code = 337;
pub const ppm_event_code_PPME_SYSCALL_IO_URING_SETUP_E: ppm_event_code = 338;
pub const ppm_event_code_PPME_SYSCALL_IO_URING_SETUP_X: ppm_event_code = 339;
pub const ppm_event_code_PPME_SYSCALL_IO_URING_ENTER_E: ppm_event_code = 340;
pub const ppm_event_code_PPME_SYSCALL_IO_URING_ENTER_X: ppm_event_code = 341;
pub const ppm_event_code_PPME_SYSCALL_IO_URING_REGISTER_E: ppm_event_code = 342;
pub const ppm_event_code_PPME_SYSCALL_IO_URING_REGISTER_X: ppm_event_code = 343;
pub const ppm_event_code_PPME_SYSCALL_MLOCK_E: ppm_event_code = 344;
pub const ppm_event_code_PPME_SYSCALL_MLOCK_X: ppm_event_code = 345;
pub const ppm_event_code_PPME_SYSCALL_MUNLOCK_E: ppm_event_code = 346;
pub const ppm_event_code_PPME_SYSCALL_MUNLOCK_X: ppm_event_code = 347;
pub const ppm_event_code_PPME_SYSCALL_MLOCKALL_E: ppm_event_code = 348;
pub const ppm_event_code_PPME_SYSCALL_MLOCKALL_X: ppm_event_code = 349;
pub const ppm_event_code_PPME_SYSCALL_MUNLOCKALL_E: ppm_event_code = 350;
pub const ppm_event_code_PPME_SYSCALL_MUNLOCKALL_X: ppm_event_code = 351;
pub const ppm_event_code_PPME_SYSCALL_CAPSET_E: ppm_event_code = 352;
pub const ppm_event_code_PPME_SYSCALL_CAPSET_X: ppm_event_code = 353;
pub const ppm_event_code_PPME_USER_ADDED_E: ppm_event_code = 354;
pub const ppm_event_code_PPME_USER_ADDED_X: ppm_event_code = 355;
pub const ppm_event_code_PPME_USER_DELETED_E: ppm_event_code = 356;
pub const ppm_event_code_PPME_USER_DELETED_X: ppm_event_code = 357;
pub const ppm_event_code_PPME_GROUP_ADDED_E: ppm_event_code = 358;
pub const ppm_event_code_PPME_GROUP_ADDED_X: ppm_event_code = 359;
pub const ppm_event_code_PPME_GROUP_DELETED_E: ppm_event_code = 360;
pub const ppm_event_code_PPME_GROUP_DELETED_X: ppm_event_code = 361;
pub const ppm_event_code_PPME_SYSCALL_DUP2_E: ppm_event_code = 362;
pub const ppm_event_code_PPME_SYSCALL_DUP2_X: ppm_event_code = 363;
pub const ppm_event_code_PPME_SYSCALL_DUP3_E: ppm_event_code = 364;
pub const ppm_event_code_PPME_SYSCALL_DUP3_X: ppm_event_code = 365;
pub const ppm_event_code_PPME_SYSCALL_DUP_1_E: ppm_event_code = 366;
pub const ppm_event_code_PPME_SYSCALL_DUP_1_X: ppm_event_code = 367;
pub const ppm_event_code_PPME_SYSCALL_BPF_2_E: ppm_event_code = 368;
pub const ppm_event_code_PPME_SYSCALL_BPF_2_X: ppm_event_code = 369;
pub const ppm_event_code_PPME_SYSCALL_MLOCK2_E: ppm_event_code = 370;
pub const ppm_event_code_PPME_SYSCALL_MLOCK2_X: ppm_event_code = 371;
pub const ppm_event_code_PPME_SYSCALL_FSCONFIG_E: ppm_event_code = 372;
pub const ppm_event_code_PPME_SYSCALL_FSCONFIG_X: ppm_event_code = 373;
pub const ppm_event_code_PPME_SYSCALL_EPOLL_CREATE_E: ppm_event_code = 374;
pub const ppm_event_code_PPME_SYSCALL_EPOLL_CREATE_X: ppm_event_code = 375;
pub const ppm_event_code_PPME_SYSCALL_EPOLL_CREATE1_E: ppm_event_code = 376;
pub const ppm_event_code_PPME_SYSCALL_EPOLL_CREATE1_X: ppm_event_code = 377;
pub const ppm_event_code_PPME_SYSCALL_CHOWN_E: ppm_event_code = 378;
pub const ppm_event_code_PPME_SYSCALL_CHOWN_X: ppm_event_code = 379;
pub const ppm_event_code_PPME_SYSCALL_LCHOWN_E: ppm_event_code = 380;
pub const ppm_event_code_PPME_SYSCALL_LCHOWN_X: ppm_event_code = 381;
pub const ppm_event_code_PPME_SYSCALL_FCHOWN_E: ppm_event_code = 382;
pub const ppm_event_code_PPME_SYSCALL_FCHOWN_X: ppm_event_code = 383;
pub const ppm_event_code_PPME_SYSCALL_FCHOWNAT_E: ppm_event_code = 384;
pub const ppm_event_code_PPME_SYSCALL_FCHOWNAT_X: ppm_event_code = 385;
pub const ppm_event_code_PPME_SYSCALL_UMOUNT_1_E: ppm_event_code = 386;
pub const ppm_event_code_PPME_SYSCALL_UMOUNT_1_X: ppm_event_code = 387;
pub const ppm_event_code_PPME_SOCKET_ACCEPT4_6_E: ppm_event_code = 388;
pub const ppm_event_code_PPME_SOCKET_ACCEPT4_6_X: ppm_event_code = 389;
pub const ppm_event_code_PPME_SYSCALL_UMOUNT2_E: ppm_event_code = 390;
pub const ppm_event_code_PPME_SYSCALL_UMOUNT2_X: ppm_event_code = 391;
pub const ppm_event_code_PPME_SYSCALL_PIPE2_E: ppm_event_code = 392;
pub const ppm_event_code_PPME_SYSCALL_PIPE2_X: ppm_event_code = 393;
pub const ppm_event_code_PPME_SYSCALL_INOTIFY_INIT1_E: ppm_event_code = 394;
pub const ppm_event_code_PPME_SYSCALL_INOTIFY_INIT1_X: ppm_event_code = 395;
pub const ppm_event_code_PPME_SYSCALL_EVENTFD2_E: ppm_event_code = 396;
pub const ppm_event_code_PPME_SYSCALL_EVENTFD2_X: ppm_event_code = 397;
pub const ppm_event_code_PPME_SYSCALL_SIGNALFD4_E: ppm_event_code = 398;
pub const ppm_event_code_PPME_SYSCALL_SIGNALFD4_X: ppm_event_code = 399;
pub const ppm_event_code_PPME_SYSCALL_PRCTL_E: ppm_event_code = 400;
pub const ppm_event_code_PPME_SYSCALL_PRCTL_X: ppm_event_code = 401;
pub const ppm_event_code_PPME_ASYNCEVENT_E: ppm_event_code = 402;
pub const ppm_event_code_PPME_ASYNCEVENT_X: ppm_event_code = 403;
pub const ppm_event_code_PPME_SYSCALL_MEMFD_CREATE_E: ppm_event_code = 404;
pub const ppm_event_code_PPME_SYSCALL_MEMFD_CREATE_X: ppm_event_code = 405;
pub const ppm_event_code_PPME_SYSCALL_PIDFD_GETFD_E: ppm_event_code = 406;
pub const ppm_event_code_PPME_SYSCALL_PIDFD_GETFD_X: ppm_event_code = 407;
pub const ppm_event_code_PPME_SYSCALL_PIDFD_OPEN_E: ppm_event_code = 408;
pub const ppm_event_code_PPME_SYSCALL_PIDFD_OPEN_X: ppm_event_code = 409;
pub const ppm_event_code_PPME_SYSCALL_INIT_MODULE_E: ppm_event_code = 410;
pub const ppm_event_code_PPME_SYSCALL_INIT_MODULE_X: ppm_event_code = 411;
pub const ppm_event_code_PPME_SYSCALL_FINIT_MODULE_E: ppm_event_code = 412;
pub const ppm_event_code_PPME_SYSCALL_FINIT_MODULE_X: ppm_event_code = 413;
pub const ppm_event_code_PPME_SYSCALL_MKNOD_E: ppm_event_code = 414;
pub const ppm_event_code_PPME_SYSCALL_MKNOD_X: ppm_event_code = 415;
pub const ppm_event_code_PPME_SYSCALL_MKNODAT_E: ppm_event_code = 416;
pub const ppm_event_code_PPME_SYSCALL_MKNODAT_X: ppm_event_code = 417;
pub const ppm_event_code_PPME_SYSCALL_NEWFSTATAT_E: ppm_event_code = 418;
pub const ppm_event_code_PPME_SYSCALL_NEWFSTATAT_X: ppm_event_code = 419;
pub const ppm_event_code_PPME_SYSCALL_PROCESS_VM_READV_E: ppm_event_code = 420;
pub const ppm_event_code_PPME_SYSCALL_PROCESS_VM_READV_X: ppm_event_code = 421;
pub const ppm_event_code_PPME_SYSCALL_PROCESS_VM_WRITEV_E: ppm_event_code = 422;
pub const ppm_event_code_PPME_SYSCALL_PROCESS_VM_WRITEV_X: ppm_event_code = 423;
pub const ppm_event_code_PPME_SYSCALL_DELETE_MODULE_E: ppm_event_code = 424;
pub const ppm_event_code_PPME_SYSCALL_DELETE_MODULE_X: ppm_event_code = 425;
pub const ppm_event_code_PPME_SYSCALL_SETREUID_E: ppm_event_code = 426;
pub const ppm_event_code_PPME_SYSCALL_SETREUID_X: ppm_event_code = 427;
pub const ppm_event_code_PPME_SYSCALL_SETREGID_E: ppm_event_code = 428;
pub const ppm_event_code_PPME_SYSCALL_SETREGID_X: ppm_event_code = 429;
pub const ppm_event_code_PPM_EVENT_MAX: ppm_event_code = 430;
#[doc = " @defgroup etypes Event Types\n  @{"]
pub type ppm_event_code = ::std::os::raw::c_uint;
pub const extra_event_prog_code_T1_EXECVE_X: extra_event_prog_code = 0;
pub const extra_event_prog_code_T1_EXECVEAT_X: extra_event_prog_code = 1;
pub const extra_event_prog_code_T1_CLONE_X: extra_event_prog_code = 2;
pub const extra_event_prog_code_T1_CLONE3_X: extra_event_prog_code = 3;
pub const extra_event_prog_code_T1_FORK_X: extra_event_prog_code = 4;
pub const extra_event_prog_code_T1_VFORK_X: extra_event_prog_code = 5;
pub const extra_event_prog_code_T1_SCHED_PROC_EXEC: extra_event_prog_code = 6;
pub const extra_event_prog_code_T1_SCHED_PROC_FORK: extra_event_prog_code = 7;
pub const extra_event_prog_code_T2_SCHED_PROC_FORK: extra_event_prog_code = 8;
pub const extra_event_prog_code_T2_CLONE_X: extra_event_prog_code = 9;
pub const extra_event_prog_code_T2_CLONE3_X: extra_event_prog_code = 10;
pub const extra_event_prog_code_T2_FORK_X: extra_event_prog_code = 11;
pub const extra_event_prog_code_T2_VFORK_X: extra_event_prog_code = 12;
pub const extra_event_prog_code_T1_DROP_E: extra_event_prog_code = 13;
pub const extra_event_prog_code_T1_DROP_X: extra_event_prog_code = 14;
pub const extra_event_prog_code_T1_HOTPLUG_E: extra_event_prog_code = 15;
pub const extra_event_prog_code_T1_OPEN_BY_HANDLE_AT_X: extra_event_prog_code = 16;
pub const extra_event_prog_code_T2_EXECVE_X: extra_event_prog_code = 17;
pub const extra_event_prog_code_T2_EXECVEAT_X: extra_event_prog_code = 18;
pub const extra_event_prog_code_T2_SCHED_PROC_EXEC: extra_event_prog_code = 19;
pub const extra_event_prog_code_TAIL_EXTRA_EVENT_PROG_MAX: extra_event_prog_code = 20;
pub type extra_event_prog_code = ::std::os::raw::c_uint;
pub const ppm_sc_code_PPM_SC_UNKNOWN: ppm_sc_code = 0;
pub const ppm_sc_code_PPM_SC_RESTART_SYSCALL: ppm_sc_code = 1;
pub const ppm_sc_code_PPM_SC_EXIT: ppm_sc_code = 2;
pub const ppm_sc_code_PPM_SC_READ: ppm_sc_code = 3;
pub const ppm_sc_code_PPM_SC_WRITE: ppm_sc_code = 4;
pub const ppm_sc_code_PPM_SC_OPEN: ppm_sc_code = 5;
pub const ppm_sc_code_PPM_SC_CLOSE: ppm_sc_code = 6;
pub const ppm_sc_code_PPM_SC_CREAT: ppm_sc_code = 7;
pub const ppm_sc_code_PPM_SC_LINK: ppm_sc_code = 8;
pub const ppm_sc_code_PPM_SC_UNLINK: ppm_sc_code = 9;
pub const ppm_sc_code_PPM_SC_CHDIR: ppm_sc_code = 10;
pub const ppm_sc_code_PPM_SC_TIME: ppm_sc_code = 11;
pub const ppm_sc_code_PPM_SC_MKNOD: ppm_sc_code = 12;
pub const ppm_sc_code_PPM_SC_CHMOD: ppm_sc_code = 13;
pub const ppm_sc_code_PPM_SC_STAT: ppm_sc_code = 14;
pub const ppm_sc_code_PPM_SC_LSEEK: ppm_sc_code = 15;
pub const ppm_sc_code_PPM_SC_GETPID: ppm_sc_code = 16;
pub const ppm_sc_code_PPM_SC_MOUNT: ppm_sc_code = 17;
pub const ppm_sc_code_PPM_SC_PTRACE: ppm_sc_code = 18;
pub const ppm_sc_code_PPM_SC_ALARM: ppm_sc_code = 19;
pub const ppm_sc_code_PPM_SC_FSTAT: ppm_sc_code = 20;
pub const ppm_sc_code_PPM_SC_PAUSE: ppm_sc_code = 21;
pub const ppm_sc_code_PPM_SC_UTIME: ppm_sc_code = 22;
pub const ppm_sc_code_PPM_SC_ACCESS: ppm_sc_code = 23;
pub const ppm_sc_code_PPM_SC_SYNC: ppm_sc_code = 24;
pub const ppm_sc_code_PPM_SC_KILL: ppm_sc_code = 25;
pub const ppm_sc_code_PPM_SC_RENAME: ppm_sc_code = 26;
pub const ppm_sc_code_PPM_SC_MKDIR: ppm_sc_code = 27;
pub const ppm_sc_code_PPM_SC_RMDIR: ppm_sc_code = 28;
pub const ppm_sc_code_PPM_SC_DUP: ppm_sc_code = 29;
pub const ppm_sc_code_PPM_SC_PIPE: ppm_sc_code = 30;
pub const ppm_sc_code_PPM_SC_TIMES: ppm_sc_code = 31;
pub const ppm_sc_code_PPM_SC_BRK: ppm_sc_code = 32;
pub const ppm_sc_code_PPM_SC_ACCT: ppm_sc_code = 33;
pub const ppm_sc_code_PPM_SC_IOCTL: ppm_sc_code = 34;
pub const ppm_sc_code_PPM_SC_FCNTL: ppm_sc_code = 35;
pub const ppm_sc_code_PPM_SC_SETPGID: ppm_sc_code = 36;
pub const ppm_sc_code_PPM_SC_UMASK: ppm_sc_code = 37;
pub const ppm_sc_code_PPM_SC_CHROOT: ppm_sc_code = 38;
pub const ppm_sc_code_PPM_SC_USTAT: ppm_sc_code = 39;
pub const ppm_sc_code_PPM_SC_DUP2: ppm_sc_code = 40;
pub const ppm_sc_code_PPM_SC_GETPPID: ppm_sc_code = 41;
pub const ppm_sc_code_PPM_SC_GETPGRP: ppm_sc_code = 42;
pub const ppm_sc_code_PPM_SC_SETSID: ppm_sc_code = 43;
pub const ppm_sc_code_PPM_SC_SETHOSTNAME: ppm_sc_code = 44;
pub const ppm_sc_code_PPM_SC_SETRLIMIT: ppm_sc_code = 45;
pub const ppm_sc_code_PPM_SC_GETRUSAGE: ppm_sc_code = 46;
pub const ppm_sc_code_PPM_SC_GETTIMEOFDAY: ppm_sc_code = 47;
pub const ppm_sc_code_PPM_SC_SETTIMEOFDAY: ppm_sc_code = 48;
pub const ppm_sc_code_PPM_SC_SYMLINK: ppm_sc_code = 49;
pub const ppm_sc_code_PPM_SC_LSTAT: ppm_sc_code = 50;
pub const ppm_sc_code_PPM_SC_READLINK: ppm_sc_code = 51;
pub const ppm_sc_code_PPM_SC_USELIB: ppm_sc_code = 52;
pub const ppm_sc_code_PPM_SC_SWAPON: ppm_sc_code = 53;
pub const ppm_sc_code_PPM_SC_REBOOT: ppm_sc_code = 54;
pub const ppm_sc_code_PPM_SC_MMAP: ppm_sc_code = 55;
pub const ppm_sc_code_PPM_SC_MUNMAP: ppm_sc_code = 56;
pub const ppm_sc_code_PPM_SC_TRUNCATE: ppm_sc_code = 57;
pub const ppm_sc_code_PPM_SC_FTRUNCATE: ppm_sc_code = 58;
pub const ppm_sc_code_PPM_SC_FCHMOD: ppm_sc_code = 59;
pub const ppm_sc_code_PPM_SC_GETPRIORITY: ppm_sc_code = 60;
pub const ppm_sc_code_PPM_SC_SETPRIORITY: ppm_sc_code = 61;
pub const ppm_sc_code_PPM_SC_STATFS: ppm_sc_code = 62;
pub const ppm_sc_code_PPM_SC_FSTATFS: ppm_sc_code = 63;
pub const ppm_sc_code_PPM_SC_SYSLOG: ppm_sc_code = 64;
pub const ppm_sc_code_PPM_SC_SETITIMER: ppm_sc_code = 65;
pub const ppm_sc_code_PPM_SC_GETITIMER: ppm_sc_code = 66;
pub const ppm_sc_code_PPM_SC_UNAME: ppm_sc_code = 67;
pub const ppm_sc_code_PPM_SC_VHANGUP: ppm_sc_code = 68;
pub const ppm_sc_code_PPM_SC_WAIT4: ppm_sc_code = 69;
pub const ppm_sc_code_PPM_SC_SWAPOFF: ppm_sc_code = 70;
pub const ppm_sc_code_PPM_SC_SYSINFO: ppm_sc_code = 71;
pub const ppm_sc_code_PPM_SC_FSYNC: ppm_sc_code = 72;
pub const ppm_sc_code_PPM_SC_SETDOMAINNAME: ppm_sc_code = 73;
pub const ppm_sc_code_PPM_SC_ADJTIMEX: ppm_sc_code = 74;
pub const ppm_sc_code_PPM_SC_MPROTECT: ppm_sc_code = 75;
pub const ppm_sc_code_PPM_SC_INIT_MODULE: ppm_sc_code = 76;
pub const ppm_sc_code_PPM_SC_DELETE_MODULE: ppm_sc_code = 77;
pub const ppm_sc_code_PPM_SC_QUOTACTL: ppm_sc_code = 78;
pub const ppm_sc_code_PPM_SC_GETPGID: ppm_sc_code = 79;
pub const ppm_sc_code_PPM_SC_FCHDIR: ppm_sc_code = 80;
pub const ppm_sc_code_PPM_SC_SYSFS: ppm_sc_code = 81;
pub const ppm_sc_code_PPM_SC_PERSONALITY: ppm_sc_code = 82;
pub const ppm_sc_code_PPM_SC_GETDENTS: ppm_sc_code = 83;
pub const ppm_sc_code_PPM_SC_SELECT: ppm_sc_code = 84;
pub const ppm_sc_code_PPM_SC_FLOCK: ppm_sc_code = 85;
pub const ppm_sc_code_PPM_SC_MSYNC: ppm_sc_code = 86;
pub const ppm_sc_code_PPM_SC_READV: ppm_sc_code = 87;
pub const ppm_sc_code_PPM_SC_WRITEV: ppm_sc_code = 88;
pub const ppm_sc_code_PPM_SC_GETSID: ppm_sc_code = 89;
pub const ppm_sc_code_PPM_SC_FDATASYNC: ppm_sc_code = 90;
pub const ppm_sc_code_PPM_SC_MLOCK: ppm_sc_code = 91;
pub const ppm_sc_code_PPM_SC_MUNLOCK: ppm_sc_code = 92;
pub const ppm_sc_code_PPM_SC_MLOCKALL: ppm_sc_code = 93;
pub const ppm_sc_code_PPM_SC_MUNLOCKALL: ppm_sc_code = 94;
pub const ppm_sc_code_PPM_SC_SCHED_SETPARAM: ppm_sc_code = 95;
pub const ppm_sc_code_PPM_SC_SCHED_GETPARAM: ppm_sc_code = 96;
pub const ppm_sc_code_PPM_SC_SCHED_SETSCHEDULER: ppm_sc_code = 97;
pub const ppm_sc_code_PPM_SC_SCHED_GETSCHEDULER: ppm_sc_code = 98;
pub const ppm_sc_code_PPM_SC_SCHED_YIELD: ppm_sc_code = 99;
pub const ppm_sc_code_PPM_SC_SCHED_GET_PRIORITY_MAX: ppm_sc_code = 100;
pub const ppm_sc_code_PPM_SC_SCHED_GET_PRIORITY_MIN: ppm_sc_code = 101;
pub const ppm_sc_code_PPM_SC_SCHED_RR_GET_INTERVAL: ppm_sc_code = 102;
pub const ppm_sc_code_PPM_SC_NANOSLEEP: ppm_sc_code = 103;
pub const ppm_sc_code_PPM_SC_MREMAP: ppm_sc_code = 104;
pub const ppm_sc_code_PPM_SC_POLL: ppm_sc_code = 105;
pub const ppm_sc_code_PPM_SC_PRCTL: ppm_sc_code = 106;
pub const ppm_sc_code_PPM_SC_RT_SIGACTION: ppm_sc_code = 107;
pub const ppm_sc_code_PPM_SC_RT_SIGPROCMASK: ppm_sc_code = 108;
pub const ppm_sc_code_PPM_SC_RT_SIGPENDING: ppm_sc_code = 109;
pub const ppm_sc_code_PPM_SC_RT_SIGTIMEDWAIT: ppm_sc_code = 110;
pub const ppm_sc_code_PPM_SC_RT_SIGQUEUEINFO: ppm_sc_code = 111;
pub const ppm_sc_code_PPM_SC_RT_SIGSUSPEND: ppm_sc_code = 112;
pub const ppm_sc_code_PPM_SC_GETCWD: ppm_sc_code = 113;
pub const ppm_sc_code_PPM_SC_CAPGET: ppm_sc_code = 114;
pub const ppm_sc_code_PPM_SC_CAPSET: ppm_sc_code = 115;
pub const ppm_sc_code_PPM_SC_SENDFILE: ppm_sc_code = 116;
pub const ppm_sc_code_PPM_SC_GETRLIMIT: ppm_sc_code = 117;
pub const ppm_sc_code_PPM_SC_LCHOWN: ppm_sc_code = 118;
pub const ppm_sc_code_PPM_SC_GETUID: ppm_sc_code = 119;
pub const ppm_sc_code_PPM_SC_GETGID: ppm_sc_code = 120;
pub const ppm_sc_code_PPM_SC_GETEUID: ppm_sc_code = 121;
pub const ppm_sc_code_PPM_SC_GETEGID: ppm_sc_code = 122;
pub const ppm_sc_code_PPM_SC_SETREUID: ppm_sc_code = 123;
pub const ppm_sc_code_PPM_SC_SETREGID: ppm_sc_code = 124;
pub const ppm_sc_code_PPM_SC_GETGROUPS: ppm_sc_code = 125;
pub const ppm_sc_code_PPM_SC_SETGROUPS: ppm_sc_code = 126;
pub const ppm_sc_code_PPM_SC_FCHOWN: ppm_sc_code = 127;
pub const ppm_sc_code_PPM_SC_SETRESUID: ppm_sc_code = 128;
pub const ppm_sc_code_PPM_SC_GETRESUID: ppm_sc_code = 129;
pub const ppm_sc_code_PPM_SC_SETRESGID: ppm_sc_code = 130;
pub const ppm_sc_code_PPM_SC_GETRESGID: ppm_sc_code = 131;
pub const ppm_sc_code_PPM_SC_CHOWN: ppm_sc_code = 132;
pub const ppm_sc_code_PPM_SC_SETUID: ppm_sc_code = 133;
pub const ppm_sc_code_PPM_SC_SETGID: ppm_sc_code = 134;
pub const ppm_sc_code_PPM_SC_SETFSUID: ppm_sc_code = 135;
pub const ppm_sc_code_PPM_SC_SETFSGID: ppm_sc_code = 136;
pub const ppm_sc_code_PPM_SC_PIVOT_ROOT: ppm_sc_code = 137;
pub const ppm_sc_code_PPM_SC_MINCORE: ppm_sc_code = 138;
pub const ppm_sc_code_PPM_SC_MADVISE: ppm_sc_code = 139;
pub const ppm_sc_code_PPM_SC_GETTID: ppm_sc_code = 140;
pub const ppm_sc_code_PPM_SC_SETXATTR: ppm_sc_code = 141;
pub const ppm_sc_code_PPM_SC_LSETXATTR: ppm_sc_code = 142;
pub const ppm_sc_code_PPM_SC_FSETXATTR: ppm_sc_code = 143;
pub const ppm_sc_code_PPM_SC_GETXATTR: ppm_sc_code = 144;
pub const ppm_sc_code_PPM_SC_LGETXATTR: ppm_sc_code = 145;
pub const ppm_sc_code_PPM_SC_FGETXATTR: ppm_sc_code = 146;
pub const ppm_sc_code_PPM_SC_LISTXATTR: ppm_sc_code = 147;
pub const ppm_sc_code_PPM_SC_LLISTXATTR: ppm_sc_code = 148;
pub const ppm_sc_code_PPM_SC_FLISTXATTR: ppm_sc_code = 149;
pub const ppm_sc_code_PPM_SC_REMOVEXATTR: ppm_sc_code = 150;
pub const ppm_sc_code_PPM_SC_LREMOVEXATTR: ppm_sc_code = 151;
pub const ppm_sc_code_PPM_SC_FREMOVEXATTR: ppm_sc_code = 152;
pub const ppm_sc_code_PPM_SC_TKILL: ppm_sc_code = 153;
pub const ppm_sc_code_PPM_SC_FUTEX: ppm_sc_code = 154;
pub const ppm_sc_code_PPM_SC_SCHED_SETAFFINITY: ppm_sc_code = 155;
pub const ppm_sc_code_PPM_SC_SCHED_GETAFFINITY: ppm_sc_code = 156;
pub const ppm_sc_code_PPM_SC_SET_THREAD_AREA: ppm_sc_code = 157;
pub const ppm_sc_code_PPM_SC_GET_THREAD_AREA: ppm_sc_code = 158;
pub const ppm_sc_code_PPM_SC_IO_SETUP: ppm_sc_code = 159;
pub const ppm_sc_code_PPM_SC_IO_DESTROY: ppm_sc_code = 160;
pub const ppm_sc_code_PPM_SC_IO_GETEVENTS: ppm_sc_code = 161;
pub const ppm_sc_code_PPM_SC_IO_SUBMIT: ppm_sc_code = 162;
pub const ppm_sc_code_PPM_SC_IO_CANCEL: ppm_sc_code = 163;
pub const ppm_sc_code_PPM_SC_EXIT_GROUP: ppm_sc_code = 164;
pub const ppm_sc_code_PPM_SC_EPOLL_CREATE: ppm_sc_code = 165;
pub const ppm_sc_code_PPM_SC_EPOLL_CTL: ppm_sc_code = 166;
pub const ppm_sc_code_PPM_SC_EPOLL_WAIT: ppm_sc_code = 167;
pub const ppm_sc_code_PPM_SC_REMAP_FILE_PAGES: ppm_sc_code = 168;
pub const ppm_sc_code_PPM_SC_SET_TID_ADDRESS: ppm_sc_code = 169;
pub const ppm_sc_code_PPM_SC_TIMER_CREATE: ppm_sc_code = 170;
pub const ppm_sc_code_PPM_SC_TIMER_SETTIME: ppm_sc_code = 171;
pub const ppm_sc_code_PPM_SC_TIMER_GETTIME: ppm_sc_code = 172;
pub const ppm_sc_code_PPM_SC_TIMER_GETOVERRUN: ppm_sc_code = 173;
pub const ppm_sc_code_PPM_SC_TIMER_DELETE: ppm_sc_code = 174;
pub const ppm_sc_code_PPM_SC_CLOCK_SETTIME: ppm_sc_code = 175;
pub const ppm_sc_code_PPM_SC_CLOCK_GETTIME: ppm_sc_code = 176;
pub const ppm_sc_code_PPM_SC_CLOCK_GETRES: ppm_sc_code = 177;
pub const ppm_sc_code_PPM_SC_CLOCK_NANOSLEEP: ppm_sc_code = 178;
pub const ppm_sc_code_PPM_SC_TGKILL: ppm_sc_code = 179;
pub const ppm_sc_code_PPM_SC_UTIMES: ppm_sc_code = 180;
pub const ppm_sc_code_PPM_SC_MQ_OPEN: ppm_sc_code = 181;
pub const ppm_sc_code_PPM_SC_MQ_UNLINK: ppm_sc_code = 182;
pub const ppm_sc_code_PPM_SC_MQ_TIMEDSEND: ppm_sc_code = 183;
pub const ppm_sc_code_PPM_SC_MQ_TIMEDRECEIVE: ppm_sc_code = 184;
pub const ppm_sc_code_PPM_SC_MQ_NOTIFY: ppm_sc_code = 185;
pub const ppm_sc_code_PPM_SC_MQ_GETSETATTR: ppm_sc_code = 186;
pub const ppm_sc_code_PPM_SC_KEXEC_LOAD: ppm_sc_code = 187;
pub const ppm_sc_code_PPM_SC_WAITID: ppm_sc_code = 188;
pub const ppm_sc_code_PPM_SC_ADD_KEY: ppm_sc_code = 189;
pub const ppm_sc_code_PPM_SC_REQUEST_KEY: ppm_sc_code = 190;
pub const ppm_sc_code_PPM_SC_KEYCTL: ppm_sc_code = 191;
pub const ppm_sc_code_PPM_SC_IOPRIO_SET: ppm_sc_code = 192;
pub const ppm_sc_code_PPM_SC_IOPRIO_GET: ppm_sc_code = 193;
pub const ppm_sc_code_PPM_SC_INOTIFY_INIT: ppm_sc_code = 194;
pub const ppm_sc_code_PPM_SC_INOTIFY_ADD_WATCH: ppm_sc_code = 195;
pub const ppm_sc_code_PPM_SC_INOTIFY_RM_WATCH: ppm_sc_code = 196;
pub const ppm_sc_code_PPM_SC_OPENAT: ppm_sc_code = 197;
pub const ppm_sc_code_PPM_SC_MKDIRAT: ppm_sc_code = 198;
pub const ppm_sc_code_PPM_SC_MKNODAT: ppm_sc_code = 199;
pub const ppm_sc_code_PPM_SC_FCHOWNAT: ppm_sc_code = 200;
pub const ppm_sc_code_PPM_SC_FUTIMESAT: ppm_sc_code = 201;
pub const ppm_sc_code_PPM_SC_UNLINKAT: ppm_sc_code = 202;
pub const ppm_sc_code_PPM_SC_RENAMEAT: ppm_sc_code = 203;
pub const ppm_sc_code_PPM_SC_LINKAT: ppm_sc_code = 204;
pub const ppm_sc_code_PPM_SC_SYMLINKAT: ppm_sc_code = 205;
pub const ppm_sc_code_PPM_SC_READLINKAT: ppm_sc_code = 206;
pub const ppm_sc_code_PPM_SC_FCHMODAT: ppm_sc_code = 207;
pub const ppm_sc_code_PPM_SC_FACCESSAT: ppm_sc_code = 208;
pub const ppm_sc_code_PPM_SC_PSELECT6: ppm_sc_code = 209;
pub const ppm_sc_code_PPM_SC_PPOLL: ppm_sc_code = 210;
pub const ppm_sc_code_PPM_SC_UNSHARE: ppm_sc_code = 211;
pub const ppm_sc_code_PPM_SC_SET_ROBUST_LIST: ppm_sc_code = 212;
pub const ppm_sc_code_PPM_SC_GET_ROBUST_LIST: ppm_sc_code = 213;
pub const ppm_sc_code_PPM_SC_SPLICE: ppm_sc_code = 214;
pub const ppm_sc_code_PPM_SC_TEE: ppm_sc_code = 215;
pub const ppm_sc_code_PPM_SC_VMSPLICE: ppm_sc_code = 216;
pub const ppm_sc_code_PPM_SC_GETCPU: ppm_sc_code = 217;
pub const ppm_sc_code_PPM_SC_EPOLL_PWAIT: ppm_sc_code = 218;
pub const ppm_sc_code_PPM_SC_UTIMENSAT: ppm_sc_code = 219;
pub const ppm_sc_code_PPM_SC_SIGNALFD: ppm_sc_code = 220;
pub const ppm_sc_code_PPM_SC_TIMERFD_CREATE: ppm_sc_code = 221;
pub const ppm_sc_code_PPM_SC_EVENTFD: ppm_sc_code = 222;
pub const ppm_sc_code_PPM_SC_TIMERFD_SETTIME: ppm_sc_code = 223;
pub const ppm_sc_code_PPM_SC_TIMERFD_GETTIME: ppm_sc_code = 224;
pub const ppm_sc_code_PPM_SC_SIGNALFD4: ppm_sc_code = 225;
pub const ppm_sc_code_PPM_SC_EVENTFD2: ppm_sc_code = 226;
pub const ppm_sc_code_PPM_SC_EPOLL_CREATE1: ppm_sc_code = 227;
pub const ppm_sc_code_PPM_SC_DUP3: ppm_sc_code = 228;
pub const ppm_sc_code_PPM_SC_PIPE2: ppm_sc_code = 229;
pub const ppm_sc_code_PPM_SC_INOTIFY_INIT1: ppm_sc_code = 230;
pub const ppm_sc_code_PPM_SC_PREADV: ppm_sc_code = 231;
pub const ppm_sc_code_PPM_SC_PWRITEV: ppm_sc_code = 232;
pub const ppm_sc_code_PPM_SC_RT_TGSIGQUEUEINFO: ppm_sc_code = 233;
pub const ppm_sc_code_PPM_SC_PERF_EVENT_OPEN: ppm_sc_code = 234;
pub const ppm_sc_code_PPM_SC_FANOTIFY_INIT: ppm_sc_code = 235;
pub const ppm_sc_code_PPM_SC_PRLIMIT64: ppm_sc_code = 236;
pub const ppm_sc_code_PPM_SC_CLOCK_ADJTIME: ppm_sc_code = 237;
pub const ppm_sc_code_PPM_SC_SYNCFS: ppm_sc_code = 238;
pub const ppm_sc_code_PPM_SC_SETNS: ppm_sc_code = 239;
pub const ppm_sc_code_PPM_SC_GETDENTS64: ppm_sc_code = 240;
pub const ppm_sc_code_PPM_SC_SOCKET: ppm_sc_code = 241;
pub const ppm_sc_code_PPM_SC_BIND: ppm_sc_code = 242;
pub const ppm_sc_code_PPM_SC_CONNECT: ppm_sc_code = 243;
pub const ppm_sc_code_PPM_SC_LISTEN: ppm_sc_code = 244;
pub const ppm_sc_code_PPM_SC_ACCEPT: ppm_sc_code = 245;
pub const ppm_sc_code_PPM_SC_GETSOCKNAME: ppm_sc_code = 246;
pub const ppm_sc_code_PPM_SC_GETPEERNAME: ppm_sc_code = 247;
pub const ppm_sc_code_PPM_SC_SOCKETPAIR: ppm_sc_code = 248;
pub const ppm_sc_code_PPM_SC_SENDTO: ppm_sc_code = 249;
pub const ppm_sc_code_PPM_SC_RECVFROM: ppm_sc_code = 250;
pub const ppm_sc_code_PPM_SC_SHUTDOWN: ppm_sc_code = 251;
pub const ppm_sc_code_PPM_SC_SETSOCKOPT: ppm_sc_code = 252;
pub const ppm_sc_code_PPM_SC_GETSOCKOPT: ppm_sc_code = 253;
pub const ppm_sc_code_PPM_SC_SENDMSG: ppm_sc_code = 254;
pub const ppm_sc_code_PPM_SC_SENDMMSG: ppm_sc_code = 255;
pub const ppm_sc_code_PPM_SC_RECVMSG: ppm_sc_code = 256;
pub const ppm_sc_code_PPM_SC_RECVMMSG: ppm_sc_code = 257;
pub const ppm_sc_code_PPM_SC_ACCEPT4: ppm_sc_code = 258;
pub const ppm_sc_code_PPM_SC_SEMOP: ppm_sc_code = 259;
pub const ppm_sc_code_PPM_SC_SEMGET: ppm_sc_code = 260;
pub const ppm_sc_code_PPM_SC_SEMCTL: ppm_sc_code = 261;
pub const ppm_sc_code_PPM_SC_MSGSND: ppm_sc_code = 262;
pub const ppm_sc_code_PPM_SC_MSGRCV: ppm_sc_code = 263;
pub const ppm_sc_code_PPM_SC_MSGGET: ppm_sc_code = 264;
pub const ppm_sc_code_PPM_SC_MSGCTL: ppm_sc_code = 265;
pub const ppm_sc_code_PPM_SC_SHMDT: ppm_sc_code = 266;
pub const ppm_sc_code_PPM_SC_SHMGET: ppm_sc_code = 267;
pub const ppm_sc_code_PPM_SC_SHMCTL: ppm_sc_code = 268;
pub const ppm_sc_code_PPM_SC_STATFS64: ppm_sc_code = 269;
pub const ppm_sc_code_PPM_SC_FSTATFS64: ppm_sc_code = 270;
pub const ppm_sc_code_PPM_SC_FSTATAT64: ppm_sc_code = 271;
pub const ppm_sc_code_PPM_SC_SENDFILE64: ppm_sc_code = 272;
pub const ppm_sc_code_PPM_SC_UGETRLIMIT: ppm_sc_code = 273;
pub const ppm_sc_code_PPM_SC_BDFLUSH: ppm_sc_code = 274;
pub const ppm_sc_code_PPM_SC_SIGPROCMASK: ppm_sc_code = 275;
pub const ppm_sc_code_PPM_SC_IPC: ppm_sc_code = 276;
pub const ppm_sc_code_PPM_SC_SOCKETCALL: ppm_sc_code = 277;
pub const ppm_sc_code_PPM_SC_STAT64: ppm_sc_code = 278;
pub const ppm_sc_code_PPM_SC_LSTAT64: ppm_sc_code = 279;
pub const ppm_sc_code_PPM_SC_FSTAT64: ppm_sc_code = 280;
pub const ppm_sc_code_PPM_SC_FCNTL64: ppm_sc_code = 281;
pub const ppm_sc_code_PPM_SC_MMAP2: ppm_sc_code = 282;
pub const ppm_sc_code_PPM_SC__NEWSELECT: ppm_sc_code = 283;
pub const ppm_sc_code_PPM_SC_SGETMASK: ppm_sc_code = 284;
pub const ppm_sc_code_PPM_SC_SSETMASK: ppm_sc_code = 285;
pub const ppm_sc_code_PPM_SC_SIGPENDING: ppm_sc_code = 286;
pub const ppm_sc_code_PPM_SC_OLDUNAME: ppm_sc_code = 287;
pub const ppm_sc_code_PPM_SC_UMOUNT: ppm_sc_code = 288;
pub const ppm_sc_code_PPM_SC_SIGNAL: ppm_sc_code = 289;
pub const ppm_sc_code_PPM_SC_NICE: ppm_sc_code = 290;
pub const ppm_sc_code_PPM_SC_STIME: ppm_sc_code = 291;
pub const ppm_sc_code_PPM_SC__LLSEEK: ppm_sc_code = 292;
pub const ppm_sc_code_PPM_SC_WAITPID: ppm_sc_code = 293;
pub const ppm_sc_code_PPM_SC_PREAD64: ppm_sc_code = 294;
pub const ppm_sc_code_PPM_SC_PWRITE64: ppm_sc_code = 295;
pub const ppm_sc_code_PPM_SC_ARCH_PRCTL: ppm_sc_code = 296;
pub const ppm_sc_code_PPM_SC_SHMAT: ppm_sc_code = 297;
pub const ppm_sc_code_PPM_SC_RT_SIGRETURN: ppm_sc_code = 298;
pub const ppm_sc_code_PPM_SC_FALLOCATE: ppm_sc_code = 299;
pub const ppm_sc_code_PPM_SC_NEWFSTATAT: ppm_sc_code = 300;
pub const ppm_sc_code_PPM_SC_PROCESS_VM_READV: ppm_sc_code = 301;
pub const ppm_sc_code_PPM_SC_PROCESS_VM_WRITEV: ppm_sc_code = 302;
pub const ppm_sc_code_PPM_SC_FORK: ppm_sc_code = 303;
pub const ppm_sc_code_PPM_SC_VFORK: ppm_sc_code = 304;
pub const ppm_sc_code_PPM_SC_SETUID32: ppm_sc_code = 305;
pub const ppm_sc_code_PPM_SC_GETUID32: ppm_sc_code = 306;
pub const ppm_sc_code_PPM_SC_SETGID32: ppm_sc_code = 307;
pub const ppm_sc_code_PPM_SC_GETEUID32: ppm_sc_code = 308;
pub const ppm_sc_code_PPM_SC_GETGID32: ppm_sc_code = 309;
pub const ppm_sc_code_PPM_SC_SETRESUID32: ppm_sc_code = 310;
pub const ppm_sc_code_PPM_SC_SETRESGID32: ppm_sc_code = 311;
pub const ppm_sc_code_PPM_SC_GETRESUID32: ppm_sc_code = 312;
pub const ppm_sc_code_PPM_SC_GETRESGID32: ppm_sc_code = 313;
pub const ppm_sc_code_PPM_SC_FINIT_MODULE: ppm_sc_code = 314;
pub const ppm_sc_code_PPM_SC_BPF: ppm_sc_code = 315;
pub const ppm_sc_code_PPM_SC_SECCOMP: ppm_sc_code = 316;
pub const ppm_sc_code_PPM_SC_SIGALTSTACK: ppm_sc_code = 317;
pub const ppm_sc_code_PPM_SC_GETRANDOM: ppm_sc_code = 318;
pub const ppm_sc_code_PPM_SC_FADVISE64: ppm_sc_code = 319;
pub const ppm_sc_code_PPM_SC_RENAMEAT2: ppm_sc_code = 320;
pub const ppm_sc_code_PPM_SC_USERFAULTFD: ppm_sc_code = 321;
pub const ppm_sc_code_PPM_SC_OPENAT2: ppm_sc_code = 322;
pub const ppm_sc_code_PPM_SC_UMOUNT2: ppm_sc_code = 323;
pub const ppm_sc_code_PPM_SC_EXECVE: ppm_sc_code = 324;
pub const ppm_sc_code_PPM_SC_EXECVEAT: ppm_sc_code = 325;
pub const ppm_sc_code_PPM_SC_COPY_FILE_RANGE: ppm_sc_code = 326;
pub const ppm_sc_code_PPM_SC_CLONE: ppm_sc_code = 327;
pub const ppm_sc_code_PPM_SC_CLONE3: ppm_sc_code = 328;
pub const ppm_sc_code_PPM_SC_OPEN_BY_HANDLE_AT: ppm_sc_code = 329;
pub const ppm_sc_code_PPM_SC_IO_URING_SETUP: ppm_sc_code = 330;
pub const ppm_sc_code_PPM_SC_IO_URING_ENTER: ppm_sc_code = 331;
pub const ppm_sc_code_PPM_SC_IO_URING_REGISTER: ppm_sc_code = 332;
pub const ppm_sc_code_PPM_SC_MLOCK2: ppm_sc_code = 333;
pub const ppm_sc_code_PPM_SC_GETEGID32: ppm_sc_code = 334;
pub const ppm_sc_code_PPM_SC_FSCONFIG: ppm_sc_code = 335;
pub const ppm_sc_code_PPM_SC_FSPICK: ppm_sc_code = 336;
pub const ppm_sc_code_PPM_SC_FSMOUNT: ppm_sc_code = 337;
pub const ppm_sc_code_PPM_SC_FSOPEN: ppm_sc_code = 338;
pub const ppm_sc_code_PPM_SC_OPEN_TREE: ppm_sc_code = 339;
pub const ppm_sc_code_PPM_SC_MOVE_MOUNT: ppm_sc_code = 340;
pub const ppm_sc_code_PPM_SC_MOUNT_SETATTR: ppm_sc_code = 341;
pub const ppm_sc_code_PPM_SC_MEMFD_CREATE: ppm_sc_code = 342;
pub const ppm_sc_code_PPM_SC_MEMFD_SECRET: ppm_sc_code = 343;
pub const ppm_sc_code_PPM_SC_IOPERM: ppm_sc_code = 344;
pub const ppm_sc_code_PPM_SC_KEXEC_FILE_LOAD: ppm_sc_code = 345;
pub const ppm_sc_code_PPM_SC_PIDFD_GETFD: ppm_sc_code = 346;
pub const ppm_sc_code_PPM_SC_PIDFD_OPEN: ppm_sc_code = 347;
pub const ppm_sc_code_PPM_SC_PIDFD_SEND_SIGNAL: ppm_sc_code = 348;
pub const ppm_sc_code_PPM_SC_PKEY_ALLOC: ppm_sc_code = 349;
pub const ppm_sc_code_PPM_SC_PKEY_MPROTECT: ppm_sc_code = 350;
pub const ppm_sc_code_PPM_SC_PKEY_FREE: ppm_sc_code = 351;
pub const ppm_sc_code_PPM_SC_LANDLOCK_CREATE_RULESET: ppm_sc_code = 352;
pub const ppm_sc_code_PPM_SC_QUOTACTL_FD: ppm_sc_code = 353;
pub const ppm_sc_code_PPM_SC_LANDLOCK_RESTRICT_SELF: ppm_sc_code = 354;
pub const ppm_sc_code_PPM_SC_LANDLOCK_ADD_RULE: ppm_sc_code = 355;
pub const ppm_sc_code_PPM_SC_EPOLL_PWAIT2: ppm_sc_code = 356;
pub const ppm_sc_code_PPM_SC_MIGRATE_PAGES: ppm_sc_code = 357;
pub const ppm_sc_code_PPM_SC_MOVE_PAGES: ppm_sc_code = 358;
pub const ppm_sc_code_PPM_SC_PREADV2: ppm_sc_code = 359;
pub const ppm_sc_code_PPM_SC_PWRITEV2: ppm_sc_code = 360;
pub const ppm_sc_code_PPM_SC_KCMP: ppm_sc_code = 361;
pub const ppm_sc_code_PPM_SC_SCHED_SETATTR: ppm_sc_code = 362;
pub const ppm_sc_code_PPM_SC_MBIND: ppm_sc_code = 363;
pub const ppm_sc_code_PPM_SC_EPOLL_CTL_OLD: ppm_sc_code = 364;
pub const ppm_sc_code_PPM_SC_LOOKUP_DCOOKIE: ppm_sc_code = 365;
pub const ppm_sc_code_PPM_SC_MODIFY_LDT: ppm_sc_code = 366;
pub const ppm_sc_code_PPM_SC_STATX: ppm_sc_code = 367;
pub const ppm_sc_code_PPM_SC_SET_MEMPOLICY: ppm_sc_code = 368;
pub const ppm_sc_code_PPM_SC_IO_PGETEVENTS: ppm_sc_code = 369;
pub const ppm_sc_code_PPM_SC_SET_MEMPOLICY_HOME_NODE: ppm_sc_code = 370;
pub const ppm_sc_code_PPM_SC_SEMTIMEDOP: ppm_sc_code = 371;
pub const ppm_sc_code_PPM_SC_GET_KERNEL_SYMS: ppm_sc_code = 372;
pub const ppm_sc_code_PPM_SC_READAHEAD: ppm_sc_code = 373;
pub const ppm_sc_code_PPM_SC_FUTEX_WAITV: ppm_sc_code = 374;
pub const ppm_sc_code_PPM_SC_GETPMSG: ppm_sc_code = 375;
pub const ppm_sc_code_PPM_SC_NAME_TO_HANDLE_AT: ppm_sc_code = 376;
pub const ppm_sc_code_PPM_SC_PROCESS_MRELEASE: ppm_sc_code = 377;
pub const ppm_sc_code_PPM_SC_NFSSERVCTL: ppm_sc_code = 378;
pub const ppm_sc_code_PPM_SC_EPOLL_WAIT_OLD: ppm_sc_code = 379;
pub const ppm_sc_code_PPM_SC_RSEQ: ppm_sc_code = 380;
pub const ppm_sc_code_PPM_SC_CREATE_MODULE: ppm_sc_code = 381;
pub const ppm_sc_code_PPM_SC_SCHED_GETATTR: ppm_sc_code = 383;
pub const ppm_sc_code_PPM_SC_FACCESSAT2: ppm_sc_code = 384;
pub const ppm_sc_code_PPM_SC__SYSCTL: ppm_sc_code = 385;
pub const ppm_sc_code_PPM_SC_QUERY_MODULE: ppm_sc_code = 386;
pub const ppm_sc_code_PPM_SC_GET_MEMPOLICY: ppm_sc_code = 387;
pub const ppm_sc_code_PPM_SC_SYNC_FILE_RANGE: ppm_sc_code = 388;
pub const ppm_sc_code_PPM_SC_PROCESS_MADVISE: ppm_sc_code = 389;
pub const ppm_sc_code_PPM_SC_MEMBARRIER: ppm_sc_code = 390;
pub const ppm_sc_code_PPM_SC_IOPL: ppm_sc_code = 391;
pub const ppm_sc_code_PPM_SC_CLOSE_RANGE: ppm_sc_code = 392;
pub const ppm_sc_code_PPM_SC_FANOTIFY_MARK: ppm_sc_code = 393;
pub const ppm_sc_code_PPM_SC_RECV: ppm_sc_code = 394;
pub const ppm_sc_code_PPM_SC_SEND: ppm_sc_code = 395;
pub const ppm_sc_code_PPM_SC_SCHED_PROCESS_EXIT: ppm_sc_code = 396;
pub const ppm_sc_code_PPM_SC_SCHED_SWITCH: ppm_sc_code = 397;
pub const ppm_sc_code_PPM_SC_PAGE_FAULT_USER: ppm_sc_code = 398;
pub const ppm_sc_code_PPM_SC_PAGE_FAULT_KERNEL: ppm_sc_code = 399;
pub const ppm_sc_code_PPM_SC_SIGNAL_DELIVER: ppm_sc_code = 400;
pub const ppm_sc_code_PPM_SC_TIMERFD: ppm_sc_code = 401;
pub const ppm_sc_code_PPM_SC_S390_PCI_MMIO_READ: ppm_sc_code = 402;
pub const ppm_sc_code_PPM_SC_SIGACTION: ppm_sc_code = 403;
pub const ppm_sc_code_PPM_SC_S390_PCI_MMIO_WRITE: ppm_sc_code = 404;
pub const ppm_sc_code_PPM_SC_READDIR: ppm_sc_code = 405;
pub const ppm_sc_code_PPM_SC_S390_STHYI: ppm_sc_code = 406;
pub const ppm_sc_code_PPM_SC_SIGSUSPEND: ppm_sc_code = 407;
pub const ppm_sc_code_PPM_SC_IDLE: ppm_sc_code = 408;
pub const ppm_sc_code_PPM_SC_S390_RUNTIME_INSTR: ppm_sc_code = 409;
pub const ppm_sc_code_PPM_SC_SIGRETURN: ppm_sc_code = 410;
pub const ppm_sc_code_PPM_SC_S390_GUARDED_STORAGE: ppm_sc_code = 411;
pub const ppm_sc_code_PPM_SC_CACHESTAT: ppm_sc_code = 412;
pub const ppm_sc_code_PPM_SC_FCHMODAT2: ppm_sc_code = 413;
pub const ppm_sc_code_PPM_SC_MAP_SHADOW_STACK: ppm_sc_code = 414;
pub const ppm_sc_code_PPM_SC_RISCV_FLUSH_ICACHE: ppm_sc_code = 415;
pub const ppm_sc_code_PPM_SC_RISCV_HWPROBE: ppm_sc_code = 416;
pub const ppm_sc_code_PPM_SC_FUTEX_WAKE: ppm_sc_code = 417;
pub const ppm_sc_code_PPM_SC_FUTEX_REQUEUE: ppm_sc_code = 418;
pub const ppm_sc_code_PPM_SC_FUTEX_WAIT: ppm_sc_code = 419;
pub const ppm_sc_code_PPM_SC_OLDSTAT: ppm_sc_code = 420;
pub const ppm_sc_code_PPM_SC_SWITCH_ENDIAN: ppm_sc_code = 421;
pub const ppm_sc_code_PPM_SC_MULTIPLEXER: ppm_sc_code = 422;
pub const ppm_sc_code_PPM_SC_OLDLSTAT: ppm_sc_code = 423;
pub const ppm_sc_code_PPM_SC_SPU_CREATE: ppm_sc_code = 424;
pub const ppm_sc_code_PPM_SC_SYNC_FILE_RANGE2: ppm_sc_code = 425;
pub const ppm_sc_code_PPM_SC_OLDFSTAT: ppm_sc_code = 426;
pub const ppm_sc_code_PPM_SC_SPU_RUN: ppm_sc_code = 427;
pub const ppm_sc_code_PPM_SC_SWAPCONTEXT: ppm_sc_code = 428;
pub const ppm_sc_code_PPM_SC_PCICONFIG_WRITE: ppm_sc_code = 429;
pub const ppm_sc_code_PPM_SC_RTAS: ppm_sc_code = 430;
pub const ppm_sc_code_PPM_SC_PCICONFIG_READ: ppm_sc_code = 431;
pub const ppm_sc_code_PPM_SC_SYS_DEBUG_SETCONTEXT: ppm_sc_code = 432;
pub const ppm_sc_code_PPM_SC_VM86: ppm_sc_code = 433;
pub const ppm_sc_code_PPM_SC_OLDOLDUNAME: ppm_sc_code = 434;
pub const ppm_sc_code_PPM_SC_SUBPAGE_PROT: ppm_sc_code = 435;
pub const ppm_sc_code_PPM_SC_PCICONFIG_IOBASE: ppm_sc_code = 436;
pub const ppm_sc_code_PPM_SC_LISTMOUNT: ppm_sc_code = 437;
pub const ppm_sc_code_PPM_SC_STATMOUNT: ppm_sc_code = 438;
pub const ppm_sc_code_PPM_SC_LSM_GET_SELF_ATTR: ppm_sc_code = 439;
pub const ppm_sc_code_PPM_SC_LSM_SET_SELF_ATTR: ppm_sc_code = 440;
pub const ppm_sc_code_PPM_SC_LSM_LIST_MODULES: ppm_sc_code = 441;
pub const ppm_sc_code_PPM_SC_MSEAL: ppm_sc_code = 442;
pub const ppm_sc_code_PPM_SC_URETPROBE: ppm_sc_code = 443;
pub const ppm_sc_code_PPM_SC_MAX: ppm_sc_code = 444;
pub type ppm_sc_code = ::std::os::raw::c_uint;
pub const ppm_event_category_EC_UNKNOWN: ppm_event_category = 0;
pub const ppm_event_category_EC_OTHER: ppm_event_category = 1;
pub const ppm_event_category_EC_FILE: ppm_event_category = 2;
pub const ppm_event_category_EC_NET: ppm_event_category = 3;
pub const ppm_event_category_EC_IPC: ppm_event_category = 4;
pub const ppm_event_category_EC_MEMORY: ppm_event_category = 5;
pub const ppm_event_category_EC_PROCESS: ppm_event_category = 6;
pub const ppm_event_category_EC_SLEEP: ppm_event_category = 7;
pub const ppm_event_category_EC_SYSTEM: ppm_event_category = 8;
pub const ppm_event_category_EC_SIGNAL: ppm_event_category = 9;
pub const ppm_event_category_EC_USER: ppm_event_category = 10;
pub const ppm_event_category_EC_TIME: ppm_event_category = 11;
pub const ppm_event_category_EC_PROCESSING: ppm_event_category = 12;
pub const ppm_event_category_EC_IO_BASE: ppm_event_category = 32;
pub const ppm_event_category_EC_IO_READ: ppm_event_category = 32;
pub const ppm_event_category_EC_IO_WRITE: ppm_event_category = 33;
pub const ppm_event_category_EC_IO_OTHER: ppm_event_category = 34;
pub const ppm_event_category_EC_WAIT: ppm_event_category = 64;
pub const ppm_event_category_EC_SCHEDULER: ppm_event_category = 128;
pub const ppm_event_category_EC_INTERNAL: ppm_event_category = 256;
pub const ppm_event_category_EC_SYSCALL: ppm_event_category = 512;
pub const ppm_event_category_EC_TRACEPOINT: ppm_event_category = 1024;
pub const ppm_event_category_EC_PLUGIN: ppm_event_category = 2048;
pub const ppm_event_category_EC_METAEVENT: ppm_event_category = 4096;
pub type ppm_event_category = ::std::os::raw::c_uint;
pub const ppm_event_flags_EF_NONE: ppm_event_flags = 0;
pub const ppm_event_flags_EF_CREATES_FD: ppm_event_flags = 1;
pub const ppm_event_flags_EF_DESTROYS_FD: ppm_event_flags = 2;
pub const ppm_event_flags_EF_USES_FD: ppm_event_flags = 4;
pub const ppm_event_flags_EF_READS_FROM_FD: ppm_event_flags = 8;
pub const ppm_event_flags_EF_WRITES_TO_FD: ppm_event_flags = 16;
pub const ppm_event_flags_EF_MODIFIES_STATE: ppm_event_flags = 32;
pub const ppm_event_flags_EF_UNUSED: ppm_event_flags = 64;
pub const ppm_event_flags_EF_WAITS: ppm_event_flags = 128;
pub const ppm_event_flags_EF_SKIPPARSERESET: ppm_event_flags = 256;
pub const ppm_event_flags_EF_OLD_VERSION: ppm_event_flags = 512;
pub const ppm_event_flags_EF_LARGE_PAYLOAD: ppm_event_flags = 2048;
pub type ppm_event_flags = ::std::os::raw::c_uint;
pub const ppm_param_type_PT_NONE: ppm_param_type = 0;
pub const ppm_param_type_PT_INT8: ppm_param_type = 1;
pub const ppm_param_type_PT_INT16: ppm_param_type = 2;
pub const ppm_param_type_PT_INT32: ppm_param_type = 3;
pub const ppm_param_type_PT_INT64: ppm_param_type = 4;
pub const ppm_param_type_PT_UINT8: ppm_param_type = 5;
pub const ppm_param_type_PT_UINT16: ppm_param_type = 6;
pub const ppm_param_type_PT_UINT32: ppm_param_type = 7;
pub const ppm_param_type_PT_UINT64: ppm_param_type = 8;
pub const ppm_param_type_PT_CHARBUF: ppm_param_type = 9;
pub const ppm_param_type_PT_BYTEBUF: ppm_param_type = 10;
pub const ppm_param_type_PT_ERRNO: ppm_param_type = 11;
pub const ppm_param_type_PT_SOCKADDR: ppm_param_type = 12;
pub const ppm_param_type_PT_SOCKTUPLE: ppm_param_type = 13;
pub const ppm_param_type_PT_FD: ppm_param_type = 14;
pub const ppm_param_type_PT_PID: ppm_param_type = 15;
pub const ppm_param_type_PT_FDLIST: ppm_param_type = 16;
pub const ppm_param_type_PT_FSPATH: ppm_param_type = 17;
pub const ppm_param_type_PT_SYSCALLID: ppm_param_type = 18;
pub const ppm_param_type_PT_SIGTYPE: ppm_param_type = 19;
pub const ppm_param_type_PT_RELTIME: ppm_param_type = 20;
pub const ppm_param_type_PT_ABSTIME: ppm_param_type = 21;
pub const ppm_param_type_PT_PORT: ppm_param_type = 22;
pub const ppm_param_type_PT_L4PROTO: ppm_param_type = 23;
pub const ppm_param_type_PT_SOCKFAMILY: ppm_param_type = 24;
pub const ppm_param_type_PT_BOOL: ppm_param_type = 25;
pub const ppm_param_type_PT_IPV4ADDR: ppm_param_type = 26;
pub const ppm_param_type_PT_DYN: ppm_param_type = 27;
pub const ppm_param_type_PT_FLAGS8: ppm_param_type = 28;
pub const ppm_param_type_PT_FLAGS16: ppm_param_type = 29;
pub const ppm_param_type_PT_FLAGS32: ppm_param_type = 30;
pub const ppm_param_type_PT_UID: ppm_param_type = 31;
pub const ppm_param_type_PT_GID: ppm_param_type = 32;
pub const ppm_param_type_PT_DOUBLE: ppm_param_type = 33;
pub const ppm_param_type_PT_SIGSET: ppm_param_type = 34;
pub const ppm_param_type_PT_CHARBUFARRAY: ppm_param_type = 35;
pub const ppm_param_type_PT_CHARBUF_PAIR_ARRAY: ppm_param_type = 36;
pub const ppm_param_type_PT_IPV4NET: ppm_param_type = 37;
pub const ppm_param_type_PT_IPV6ADDR: ppm_param_type = 38;
pub const ppm_param_type_PT_IPV6NET: ppm_param_type = 39;
pub const ppm_param_type_PT_IPADDR: ppm_param_type = 40;
pub const ppm_param_type_PT_IPNET: ppm_param_type = 41;
pub const ppm_param_type_PT_MODE: ppm_param_type = 42;
pub const ppm_param_type_PT_FSRELPATH: ppm_param_type = 43;
pub const ppm_param_type_PT_ENUMFLAGS8: ppm_param_type = 44;
pub const ppm_param_type_PT_ENUMFLAGS16: ppm_param_type = 45;
pub const ppm_param_type_PT_ENUMFLAGS32: ppm_param_type = 46;
pub const ppm_param_type_PT_MAX: ppm_param_type = 47;
pub type ppm_param_type = ::std::os::raw::c_uint;
pub const ppm_print_format_PF_NA: ppm_print_format = 0;
pub const ppm_print_format_PF_DEC: ppm_print_format = 1;
pub const ppm_print_format_PF_HEX: ppm_print_format = 2;
pub const ppm_print_format_PF_10_PADDED_DEC: ppm_print_format = 3;
pub const ppm_print_format_PF_ID: ppm_print_format = 4;
pub const ppm_print_format_PF_DIR: ppm_print_format = 5;
pub const ppm_print_format_PF_OCT: ppm_print_format = 6;
pub type ppm_print_format = ::std::os::raw::c_uint;
#[doc = "\\brief Name-value pair, used to store flags information."]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ppm_name_value {
    pub name: *const ::std::os::raw::c_char,
    pub value: u32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ppm_name_value"][::std::mem::size_of::<ppm_name_value>() - 16usize];
    ["Alignment of ppm_name_value"][::std::mem::align_of::<ppm_name_value>() - 8usize];
    ["Offset of field: ppm_name_value::name"]
        [::std::mem::offset_of!(ppm_name_value, name) - 0usize];
    ["Offset of field: ppm_name_value::value"]
        [::std::mem::offset_of!(ppm_name_value, value) - 8usize];
};
#[doc = "\\brief Event parameter information."]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ppm_param_info {
    #[doc = "< Parameter name, e.g. 'size'."]
    pub name: [::std::os::raw::c_char; 32usize],
    #[doc = "< Parameter type, e.g. 'uint16', 'string'..."]
    pub type_: ppm_param_type,
    #[doc = "< If this is a numeric parameter, this flag specifies if it should\nbe rendered as decimal or hex."]
    pub fmt: ppm_print_format,
    #[doc = "< If this is a flags parameter, it points to an array of ppm_name_value,\nif this is a FSRELPATH parameter, it references the related dirfd,\nelse if this is a dynamic parameter it points to an array of ppm_param_info"]
    pub info: *const ::std::os::raw::c_void,
    #[doc = "< Number of entry in the info array."]
    pub ninfo: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ppm_param_info"][::std::mem::size_of::<ppm_param_info>() - 56usize];
    ["Alignment of ppm_param_info"][::std::mem::align_of::<ppm_param_info>() - 8usize];
    ["Offset of field: ppm_param_info::name"]
        [::std::mem::offset_of!(ppm_param_info, name) - 0usize];
    ["Offset of field: ppm_param_info::type_"]
        [::std::mem::offset_of!(ppm_param_info, type_) - 32usize];
    ["Offset of field: ppm_param_info::fmt"][::std::mem::offset_of!(ppm_param_info, fmt) - 36usize];
    ["Offset of field: ppm_param_info::info"]
        [::std::mem::offset_of!(ppm_param_info, info) - 40usize];
    ["Offset of field: ppm_param_info::ninfo"]
        [::std::mem::offset_of!(ppm_param_info, ninfo) - 48usize];
};
#[doc = "\\brief Event information.\nThis structure contains the full description of an event type (e.g. 'open') that\nis supported by the infrastructure."]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ppm_event_info {
    #[doc = "< Name."]
    pub name: [::std::os::raw::c_char; 32usize],
    #[doc = "< Event category, e.g. 'file', 'net', etc."]
    pub category: ppm_event_category,
    #[doc = "< flags for this event."]
    pub flags: ppm_event_flags,
    #[doc = "< Number of parameter in the params array."]
    pub nparams: u32,
    #[doc = "< parameters descriptions."]
    pub params: [ppm_param_info; 32usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ppm_event_info"][::std::mem::size_of::<ppm_event_info>() - 1840usize];
    ["Alignment of ppm_event_info"][::std::mem::align_of::<ppm_event_info>() - 8usize];
    ["Offset of field: ppm_event_info::name"]
        [::std::mem::offset_of!(ppm_event_info, name) - 0usize];
    ["Offset of field: ppm_event_info::category"]
        [::std::mem::offset_of!(ppm_event_info, category) - 32usize];
    ["Offset of field: ppm_event_info::flags"]
        [::std::mem::offset_of!(ppm_event_info, flags) - 36usize];
    ["Offset of field: ppm_event_info::nparams"]
        [::std::mem::offset_of!(ppm_event_info, nparams) - 40usize];
    ["Offset of field: ppm_event_info::params"]
        [::std::mem::offset_of!(ppm_event_info, params) - 48usize];
};
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct ppm_evt_hdr {
    pub ts: u64,
    pub tid: u64,
    pub len: u32,
    pub type_: u16,
    pub nparams: u32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ppm_evt_hdr"][::std::mem::size_of::<ppm_evt_hdr>() - 26usize];
    ["Alignment of ppm_evt_hdr"][::std::mem::align_of::<ppm_evt_hdr>() - 1usize];
    ["Offset of field: ppm_evt_hdr::ts"][::std::mem::offset_of!(ppm_evt_hdr, ts) - 0usize];
    ["Offset of field: ppm_evt_hdr::tid"][::std::mem::offset_of!(ppm_evt_hdr, tid) - 8usize];
    ["Offset of field: ppm_evt_hdr::len"][::std::mem::offset_of!(ppm_evt_hdr, len) - 16usize];
    ["Offset of field: ppm_evt_hdr::type_"][::std::mem::offset_of!(ppm_evt_hdr, type_) - 20usize];
    ["Offset of field: ppm_evt_hdr::nparams"]
        [::std::mem::offset_of!(ppm_evt_hdr, nparams) - 22usize];
};
unsafe extern "C" {
    pub static socket_families: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static file_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static creat_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static flock_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static clone_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static futex_operations: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static lseek_whence: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static poll_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static mount_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static umount_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static shutdown_how: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static rlimit_resources: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static fcntl_commands: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static sockopt_levels: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static sockopt_options: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static ptrace_requests: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static prot_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static mmap_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static splice_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static quotactl_cmds: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static quotactl_types: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static quotactl_dqi_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static quotactl_quota_fmts: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static semop_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static semget_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static semctl_commands: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static access_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static pf_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static unlinkat_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static linkat_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static newfstatat_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static chmod_mode: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static mknod_mode: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static renameat2_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static openat2_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static execve_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static execveat_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static io_uring_setup_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static io_uring_setup_feats: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static io_uring_enter_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static io_uring_register_opcodes: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static mlockall_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static mlock2_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static fsconfig_cmds: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static epoll_create1_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static fchownat_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static prctl_options: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static memfd_create_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static pidfd_open_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static bpf_commands: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static sockopt_dynamic_param: [ppm_param_info; 0usize];
}
unsafe extern "C" {
    pub static ptrace_dynamic_param: [ppm_param_info; 0usize];
}
unsafe extern "C" {
    pub static bpf_dynamic_param: [ppm_param_info; 0usize];
}
unsafe extern "C" {
    pub static delete_module_flags: [ppm_name_value; 0usize];
}
unsafe extern "C" {
    pub static finit_module_flags: [ppm_name_value; 0usize];
}
#[doc = "\\brief Process information as returned by the PPM_IOCTL_GET_PROCLIST IOCTL."]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ppm_proc_info {
    pub pid: u64,
    pub utime: u64,
    pub stime: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ppm_proc_info"][::std::mem::size_of::<ppm_proc_info>() - 24usize];
    ["Alignment of ppm_proc_info"][::std::mem::align_of::<ppm_proc_info>() - 8usize];
    ["Offset of field: ppm_proc_info::pid"][::std::mem::offset_of!(ppm_proc_info, pid) - 0usize];
    ["Offset of field: ppm_proc_info::utime"]
        [::std::mem::offset_of!(ppm_proc_info, utime) - 8usize];
    ["Offset of field: ppm_proc_info::stime"]
        [::std::mem::offset_of!(ppm_proc_info, stime) - 16usize];
};
#[repr(C)]
#[derive(Debug)]
pub struct ppm_proclist_info {
    pub n_entries: i64,
    pub max_entries: i64,
    pub entries: __IncompleteArrayField<ppm_proc_info>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ppm_proclist_info"][::std::mem::size_of::<ppm_proclist_info>() - 16usize];
    ["Alignment of ppm_proclist_info"][::std::mem::align_of::<ppm_proclist_info>() - 8usize];
    ["Offset of field: ppm_proclist_info::n_entries"]
        [::std::mem::offset_of!(ppm_proclist_info, n_entries) - 0usize];
    ["Offset of field: ppm_proclist_info::max_entries"]
        [::std::mem::offset_of!(ppm_proclist_info, max_entries) - 8usize];
    ["Offset of field: ppm_proclist_info::entries"]
        [::std::mem::offset_of!(ppm_proclist_info, entries) - 16usize];
};
pub const syscall_flags_UF_NONE: syscall_flags = 0;
pub const syscall_flags_UF_USED: syscall_flags = 1;
pub const syscall_flags_UF_NEVER_DROP: syscall_flags = 2;
pub const syscall_flags_UF_ALWAYS_DROP: syscall_flags = 4;
#[doc = "< The handler should not block (interrupt context)"]
pub const syscall_flags_UF_ATOMIC: syscall_flags = 16;
pub type syscall_flags = ::std::os::raw::c_uint;
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct syscall_evt_pair {
    pub flags: ::std::os::raw::c_int,
    pub enter_event_type: ppm_event_code,
    pub exit_event_type: ppm_event_code,
    pub ppm_sc: ppm_sc_code,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of syscall_evt_pair"][::std::mem::size_of::<syscall_evt_pair>() - 16usize];
    ["Alignment of syscall_evt_pair"][::std::mem::align_of::<syscall_evt_pair>() - 1usize];
    ["Offset of field: syscall_evt_pair::flags"]
        [::std::mem::offset_of!(syscall_evt_pair, flags) - 0usize];
    ["Offset of field: syscall_evt_pair::enter_event_type"]
        [::std::mem::offset_of!(syscall_evt_pair, enter_event_type) - 4usize];
    ["Offset of field: syscall_evt_pair::exit_event_type"]
        [::std::mem::offset_of!(syscall_evt_pair, exit_event_type) - 8usize];
    ["Offset of field: syscall_evt_pair::ppm_sc"]
        [::std::mem::offset_of!(syscall_evt_pair, ppm_sc) - 12usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct event_filler_arguments {
    _unused: [u8; 0],
}
pub const ppm_filler_id_PPM_FILLER_sys_autofill: ppm_filler_id = 0;
pub const ppm_filler_id_PPM_FILLER_sys_generic: ppm_filler_id = 1;
pub const ppm_filler_id_PPM_FILLER_sys_empty: ppm_filler_id = 2;
pub const ppm_filler_id_PPM_FILLER_sys_getcwd_x: ppm_filler_id = 3;
pub const ppm_filler_id_PPM_FILLER_sys_getdents_e: ppm_filler_id = 4;
pub const ppm_filler_id_PPM_FILLER_sys_getdents64_e: ppm_filler_id = 5;
pub const ppm_filler_id_PPM_FILLER_sys_single: ppm_filler_id = 6;
pub const ppm_filler_id_PPM_FILLER_sys_single_x: ppm_filler_id = 7;
pub const ppm_filler_id_PPM_FILLER_sys_fstat_e: ppm_filler_id = 8;
pub const ppm_filler_id_PPM_FILLER_sys_open_e: ppm_filler_id = 9;
pub const ppm_filler_id_PPM_FILLER_sys_open_x: ppm_filler_id = 10;
pub const ppm_filler_id_PPM_FILLER_sys_read_e: ppm_filler_id = 11;
pub const ppm_filler_id_PPM_FILLER_sys_read_x: ppm_filler_id = 12;
pub const ppm_filler_id_PPM_FILLER_sys_write_e: ppm_filler_id = 13;
pub const ppm_filler_id_PPM_FILLER_sys_write_x: ppm_filler_id = 14;
pub const ppm_filler_id_PPM_FILLER_sys_execve_e: ppm_filler_id = 15;
pub const ppm_filler_id_PPM_FILLER_proc_startupdate: ppm_filler_id = 16;
pub const ppm_filler_id_PPM_FILLER_proc_startupdate_2: ppm_filler_id = 17;
pub const ppm_filler_id_PPM_FILLER_proc_startupdate_3: ppm_filler_id = 18;
pub const ppm_filler_id_PPM_FILLER_sys_socketpair_x: ppm_filler_id = 19;
pub const ppm_filler_id_PPM_FILLER_sys_setsockopt_x: ppm_filler_id = 20;
pub const ppm_filler_id_PPM_FILLER_sys_getsockopt_x: ppm_filler_id = 21;
pub const ppm_filler_id_PPM_FILLER_sys_connect_x: ppm_filler_id = 22;
pub const ppm_filler_id_PPM_FILLER_sys_accept4_e: ppm_filler_id = 23;
pub const ppm_filler_id_PPM_FILLER_sys_accept_x: ppm_filler_id = 24;
pub const ppm_filler_id_PPM_FILLER_sys_send_e: ppm_filler_id = 25;
pub const ppm_filler_id_PPM_FILLER_sys_send_x: ppm_filler_id = 26;
pub const ppm_filler_id_PPM_FILLER_sys_sendto_e: ppm_filler_id = 27;
pub const ppm_filler_id_PPM_FILLER_sys_sendmsg_e: ppm_filler_id = 28;
pub const ppm_filler_id_PPM_FILLER_sys_sendmsg_x: ppm_filler_id = 29;
pub const ppm_filler_id_PPM_FILLER_sys_recv_x: ppm_filler_id = 30;
pub const ppm_filler_id_PPM_FILLER_sys_recvfrom_x: ppm_filler_id = 31;
pub const ppm_filler_id_PPM_FILLER_sys_recvmsg_x: ppm_filler_id = 32;
pub const ppm_filler_id_PPM_FILLER_sys_recvmsg_x_2: ppm_filler_id = 33;
pub const ppm_filler_id_PPM_FILLER_sys_shutdown_e: ppm_filler_id = 34;
pub const ppm_filler_id_PPM_FILLER_sys_creat_e: ppm_filler_id = 35;
pub const ppm_filler_id_PPM_FILLER_sys_creat_x: ppm_filler_id = 36;
pub const ppm_filler_id_PPM_FILLER_sys_pipe_x: ppm_filler_id = 37;
pub const ppm_filler_id_PPM_FILLER_sys_eventfd_e: ppm_filler_id = 38;
pub const ppm_filler_id_PPM_FILLER_sys_futex_e: ppm_filler_id = 39;
pub const ppm_filler_id_PPM_FILLER_sys_lseek_e: ppm_filler_id = 40;
pub const ppm_filler_id_PPM_FILLER_sys_llseek_e: ppm_filler_id = 41;
pub const ppm_filler_id_PPM_FILLER_sys_socket_bind_x: ppm_filler_id = 42;
pub const ppm_filler_id_PPM_FILLER_sys_poll_e: ppm_filler_id = 43;
pub const ppm_filler_id_PPM_FILLER_sys_poll_x: ppm_filler_id = 44;
pub const ppm_filler_id_PPM_FILLER_sys_pread64_e: ppm_filler_id = 45;
pub const ppm_filler_id_PPM_FILLER_sys_writev_e: ppm_filler_id = 46;
pub const ppm_filler_id_PPM_FILLER_sys_pwrite64_e: ppm_filler_id = 47;
pub const ppm_filler_id_PPM_FILLER_sys_readv_e: ppm_filler_id = 48;
pub const ppm_filler_id_PPM_FILLER_sys_preadv_e: ppm_filler_id = 49;
pub const ppm_filler_id_PPM_FILLER_sys_readv_preadv_x: ppm_filler_id = 50;
pub const ppm_filler_id_PPM_FILLER_sys_writev_pwritev_x: ppm_filler_id = 51;
pub const ppm_filler_id_PPM_FILLER_sys_pwritev_e: ppm_filler_id = 52;
pub const ppm_filler_id_PPM_FILLER_sys_nanosleep_e: ppm_filler_id = 53;
pub const ppm_filler_id_PPM_FILLER_sys_getrlimit_setrlimit_e: ppm_filler_id = 54;
pub const ppm_filler_id_PPM_FILLER_sys_getrlimit_x: ppm_filler_id = 55;
pub const ppm_filler_id_PPM_FILLER_sys_setrlimit_x: ppm_filler_id = 56;
pub const ppm_filler_id_PPM_FILLER_sys_prlimit_e: ppm_filler_id = 57;
pub const ppm_filler_id_PPM_FILLER_sys_prlimit_x: ppm_filler_id = 58;
pub const ppm_filler_id_PPM_FILLER_sched_switch_e: ppm_filler_id = 59;
pub const ppm_filler_id_PPM_FILLER_sched_drop: ppm_filler_id = 60;
pub const ppm_filler_id_PPM_FILLER_sys_fcntl_e: ppm_filler_id = 61;
pub const ppm_filler_id_PPM_FILLER_sys_fcntl_x: ppm_filler_id = 62;
pub const ppm_filler_id_PPM_FILLER_sys_ptrace_e: ppm_filler_id = 63;
pub const ppm_filler_id_PPM_FILLER_sys_ptrace_x: ppm_filler_id = 64;
pub const ppm_filler_id_PPM_FILLER_sys_mmap_e: ppm_filler_id = 65;
pub const ppm_filler_id_PPM_FILLER_sys_brk_munmap_mmap_x: ppm_filler_id = 66;
pub const ppm_filler_id_PPM_FILLER_sys_renameat_x: ppm_filler_id = 67;
pub const ppm_filler_id_PPM_FILLER_sys_renameat2_x: ppm_filler_id = 68;
pub const ppm_filler_id_PPM_FILLER_sys_symlinkat_x: ppm_filler_id = 69;
pub const ppm_filler_id_PPM_FILLER_sys_procexit_e: ppm_filler_id = 70;
pub const ppm_filler_id_PPM_FILLER_sys_sendfile_e: ppm_filler_id = 71;
pub const ppm_filler_id_PPM_FILLER_sys_sendfile_x: ppm_filler_id = 72;
pub const ppm_filler_id_PPM_FILLER_sys_quotactl_e: ppm_filler_id = 73;
pub const ppm_filler_id_PPM_FILLER_sys_quotactl_x: ppm_filler_id = 74;
pub const ppm_filler_id_PPM_FILLER_sys_scapevent_e: ppm_filler_id = 75;
pub const ppm_filler_id_PPM_FILLER_sys_getresuid_and_gid_x: ppm_filler_id = 76;
pub const ppm_filler_id_PPM_FILLER_sys_signaldeliver_e: ppm_filler_id = 77;
pub const ppm_filler_id_PPM_FILLER_sys_pagefault_e: ppm_filler_id = 78;
pub const ppm_filler_id_PPM_FILLER_sys_setns_e: ppm_filler_id = 79;
pub const ppm_filler_id_PPM_FILLER_sys_unshare_e: ppm_filler_id = 80;
pub const ppm_filler_id_PPM_FILLER_sys_flock_e: ppm_filler_id = 81;
pub const ppm_filler_id_PPM_FILLER_cpu_hotplug_e: ppm_filler_id = 82;
pub const ppm_filler_id_PPM_FILLER_sys_semop_x: ppm_filler_id = 83;
pub const ppm_filler_id_PPM_FILLER_sys_semget_e: ppm_filler_id = 84;
pub const ppm_filler_id_PPM_FILLER_sys_semctl_e: ppm_filler_id = 85;
pub const ppm_filler_id_PPM_FILLER_sys_ppoll_e: ppm_filler_id = 86;
pub const ppm_filler_id_PPM_FILLER_sys_mount_e: ppm_filler_id = 87;
pub const ppm_filler_id_PPM_FILLER_sys_access_e: ppm_filler_id = 88;
pub const ppm_filler_id_PPM_FILLER_sys_socket_x: ppm_filler_id = 89;
pub const ppm_filler_id_PPM_FILLER_sys_bpf_x: ppm_filler_id = 90;
pub const ppm_filler_id_PPM_FILLER_sys_unlinkat_x: ppm_filler_id = 91;
pub const ppm_filler_id_PPM_FILLER_sys_fchmodat_x: ppm_filler_id = 92;
pub const ppm_filler_id_PPM_FILLER_sys_chmod_x: ppm_filler_id = 93;
pub const ppm_filler_id_PPM_FILLER_sys_fchmod_x: ppm_filler_id = 94;
pub const ppm_filler_id_PPM_FILLER_sys_chown_x: ppm_filler_id = 95;
pub const ppm_filler_id_PPM_FILLER_sys_lchown_x: ppm_filler_id = 96;
pub const ppm_filler_id_PPM_FILLER_sys_fchown_x: ppm_filler_id = 97;
pub const ppm_filler_id_PPM_FILLER_sys_fchownat_x: ppm_filler_id = 98;
pub const ppm_filler_id_PPM_FILLER_sys_mkdirat_x: ppm_filler_id = 99;
pub const ppm_filler_id_PPM_FILLER_sys_openat_e: ppm_filler_id = 100;
pub const ppm_filler_id_PPM_FILLER_sys_openat_x: ppm_filler_id = 101;
pub const ppm_filler_id_PPM_FILLER_sys_openat2_e: ppm_filler_id = 102;
pub const ppm_filler_id_PPM_FILLER_sys_openat2_x: ppm_filler_id = 103;
pub const ppm_filler_id_PPM_FILLER_sys_linkat_x: ppm_filler_id = 104;
pub const ppm_filler_id_PPM_FILLER_sys_mprotect_e: ppm_filler_id = 105;
pub const ppm_filler_id_PPM_FILLER_sys_mprotect_x: ppm_filler_id = 106;
pub const ppm_filler_id_PPM_FILLER_sys_execveat_e: ppm_filler_id = 107;
pub const ppm_filler_id_PPM_FILLER_execve_extra_tail_1: ppm_filler_id = 108;
pub const ppm_filler_id_PPM_FILLER_execve_extra_tail_2: ppm_filler_id = 109;
pub const ppm_filler_id_PPM_FILLER_sys_copy_file_range_e: ppm_filler_id = 110;
pub const ppm_filler_id_PPM_FILLER_sys_copy_file_range_x: ppm_filler_id = 111;
pub const ppm_filler_id_PPM_FILLER_sys_connect_e: ppm_filler_id = 112;
pub const ppm_filler_id_PPM_FILLER_sys_open_by_handle_at_x: ppm_filler_id = 113;
pub const ppm_filler_id_PPM_FILLER_open_by_handle_at_x_extra_tail_1: ppm_filler_id = 114;
pub const ppm_filler_id_PPM_FILLER_sys_io_uring_setup_x: ppm_filler_id = 115;
pub const ppm_filler_id_PPM_FILLER_sys_io_uring_enter_x: ppm_filler_id = 116;
pub const ppm_filler_id_PPM_FILLER_sys_io_uring_register_x: ppm_filler_id = 117;
pub const ppm_filler_id_PPM_FILLER_sys_mlock_x: ppm_filler_id = 118;
pub const ppm_filler_id_PPM_FILLER_sys_munlock_x: ppm_filler_id = 119;
pub const ppm_filler_id_PPM_FILLER_sys_mlockall_x: ppm_filler_id = 120;
pub const ppm_filler_id_PPM_FILLER_sys_munlockall_x: ppm_filler_id = 121;
pub const ppm_filler_id_PPM_FILLER_sys_capset_x: ppm_filler_id = 122;
pub const ppm_filler_id_PPM_FILLER_sys_dup2_e: ppm_filler_id = 123;
pub const ppm_filler_id_PPM_FILLER_sys_dup2_x: ppm_filler_id = 124;
pub const ppm_filler_id_PPM_FILLER_sys_dup3_e: ppm_filler_id = 125;
pub const ppm_filler_id_PPM_FILLER_sys_dup3_x: ppm_filler_id = 126;
pub const ppm_filler_id_PPM_FILLER_sys_dup_e: ppm_filler_id = 127;
pub const ppm_filler_id_PPM_FILLER_sys_dup_x: ppm_filler_id = 128;
pub const ppm_filler_id_PPM_FILLER_sched_prog_exec: ppm_filler_id = 129;
pub const ppm_filler_id_PPM_FILLER_sched_prog_exec_2: ppm_filler_id = 130;
pub const ppm_filler_id_PPM_FILLER_sched_prog_exec_3: ppm_filler_id = 131;
pub const ppm_filler_id_PPM_FILLER_sched_prog_exec_4: ppm_filler_id = 132;
pub const ppm_filler_id_PPM_FILLER_sched_prog_exec_5: ppm_filler_id = 133;
pub const ppm_filler_id_PPM_FILLER_sched_prog_fork: ppm_filler_id = 134;
pub const ppm_filler_id_PPM_FILLER_sched_prog_fork_2: ppm_filler_id = 135;
pub const ppm_filler_id_PPM_FILLER_sched_prog_fork_3: ppm_filler_id = 136;
pub const ppm_filler_id_PPM_FILLER_sys_mlock2_x: ppm_filler_id = 137;
pub const ppm_filler_id_PPM_FILLER_sys_fsconfig_x: ppm_filler_id = 138;
pub const ppm_filler_id_PPM_FILLER_sys_epoll_create_e: ppm_filler_id = 139;
pub const ppm_filler_id_PPM_FILLER_sys_epoll_create_x: ppm_filler_id = 140;
pub const ppm_filler_id_PPM_FILLER_sys_epoll_create1_e: ppm_filler_id = 141;
pub const ppm_filler_id_PPM_FILLER_sys_epoll_create1_x: ppm_filler_id = 142;
pub const ppm_filler_id_PPM_FILLER_sys_socket_bind_e: ppm_filler_id = 143;
pub const ppm_filler_id_PPM_FILLER_sys_bpf_e: ppm_filler_id = 144;
pub const ppm_filler_id_PPM_FILLER_sys_close_e: ppm_filler_id = 145;
pub const ppm_filler_id_PPM_FILLER_sys_close_x: ppm_filler_id = 146;
pub const ppm_filler_id_PPM_FILLER_sys_fchdir_e: ppm_filler_id = 147;
pub const ppm_filler_id_PPM_FILLER_sys_fchdir_x: ppm_filler_id = 148;
pub const ppm_filler_id_PPM_FILLER_sys_ioctl_e: ppm_filler_id = 149;
pub const ppm_filler_id_PPM_FILLER_sys_mkdir_e: ppm_filler_id = 150;
pub const ppm_filler_id_PPM_FILLER_sys_setpgid_e: ppm_filler_id = 151;
pub const ppm_filler_id_PPM_FILLER_sys_recvfrom_e: ppm_filler_id = 152;
pub const ppm_filler_id_PPM_FILLER_sys_recvmsg_e: ppm_filler_id = 153;
pub const ppm_filler_id_PPM_FILLER_sys_listen_e: ppm_filler_id = 154;
pub const ppm_filler_id_PPM_FILLER_sys_signalfd_e: ppm_filler_id = 155;
pub const ppm_filler_id_PPM_FILLER_sys_splice_e: ppm_filler_id = 156;
pub const ppm_filler_id_PPM_FILLER_sys_umount_x: ppm_filler_id = 157;
pub const ppm_filler_id_PPM_FILLER_sys_umount2_e: ppm_filler_id = 158;
pub const ppm_filler_id_PPM_FILLER_sys_umount2_x: ppm_filler_id = 159;
pub const ppm_filler_id_PPM_FILLER_sys_pipe2_x: ppm_filler_id = 160;
pub const ppm_filler_id_PPM_FILLER_sys_inotify_init_e: ppm_filler_id = 161;
pub const ppm_filler_id_PPM_FILLER_sys_inotify_init1_x: ppm_filler_id = 162;
pub const ppm_filler_id_PPM_FILLER_sys_eventfd2_e: ppm_filler_id = 163;
pub const ppm_filler_id_PPM_FILLER_sys_eventfd2_x: ppm_filler_id = 164;
pub const ppm_filler_id_PPM_FILLER_sys_signalfd4_e: ppm_filler_id = 165;
pub const ppm_filler_id_PPM_FILLER_sys_signalfd4_x: ppm_filler_id = 166;
pub const ppm_filler_id_PPM_FILLER_sys_prctl_x: ppm_filler_id = 167;
pub const ppm_filler_id_PPM_FILLER_sys_memfd_create_x: ppm_filler_id = 168;
pub const ppm_filler_id_PPM_FILLER_sys_pidfd_getfd_x: ppm_filler_id = 169;
pub const ppm_filler_id_PPM_FILLER_sys_pidfd_open_x: ppm_filler_id = 170;
pub const ppm_filler_id_PPM_FILLER_sys_init_module_x: ppm_filler_id = 171;
pub const ppm_filler_id_PPM_FILLER_sys_finit_module_x: ppm_filler_id = 172;
pub const ppm_filler_id_PPM_FILLER_sys_mknod_x: ppm_filler_id = 173;
pub const ppm_filler_id_PPM_FILLER_sys_mknodat_x: ppm_filler_id = 174;
pub const ppm_filler_id_PPM_FILLER_sys_newfstatat_x: ppm_filler_id = 175;
pub const ppm_filler_id_PPM_FILLER_sys_process_vm_readv_x: ppm_filler_id = 176;
pub const ppm_filler_id_PPM_FILLER_sys_process_vm_writev_x: ppm_filler_id = 177;
pub const ppm_filler_id_PPM_FILLER_sys_delete_module_x: ppm_filler_id = 178;
pub const ppm_filler_id_PPM_FILLER_terminate_filler: ppm_filler_id = 179;
pub const ppm_filler_id_PPM_FILLER_MAX: ppm_filler_id = 180;
pub type ppm_filler_id = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn f_sys_autofill(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_generic(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_empty(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_getcwd_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_getdents_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_getdents64_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_single(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_single_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_fstat_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_open_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_open_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_read_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_read_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_write_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_write_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_execve_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_proc_startupdate(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_proc_startupdate_2(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_proc_startupdate_3(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_socketpair_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_setsockopt_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_getsockopt_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_connect_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_accept4_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_accept_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_send_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_send_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_sendto_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_sendmsg_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_sendmsg_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_recv_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_recvfrom_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_recvmsg_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_recvmsg_x_2(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_shutdown_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_creat_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_creat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_pipe_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_eventfd_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_futex_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_lseek_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_llseek_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_socket_bind_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_poll_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_poll_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_pread64_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_writev_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_pwrite64_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_readv_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_preadv_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_readv_preadv_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_writev_pwritev_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_pwritev_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_nanosleep_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_getrlimit_setrlimit_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_getrlimit_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_setrlimit_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_prlimit_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_prlimit_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sched_switch_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sched_drop(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_fcntl_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_fcntl_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_ptrace_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_ptrace_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mmap_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_brk_munmap_mmap_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_renameat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_renameat2_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_symlinkat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_procexit_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_sendfile_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_sendfile_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_quotactl_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_quotactl_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_scapevent_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_getresuid_and_gid_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_signaldeliver_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_pagefault_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_setns_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_unshare_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_flock_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_cpu_hotplug_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_semop_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_semget_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_semctl_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_ppoll_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mount_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_access_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_socket_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_bpf_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_unlinkat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_fchmodat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_chmod_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_fchmod_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_chown_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_lchown_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_fchown_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_fchownat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mkdirat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_openat_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_openat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_openat2_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_openat2_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_linkat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mprotect_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mprotect_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_execveat_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_execve_extra_tail_1(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_execve_extra_tail_2(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_copy_file_range_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_copy_file_range_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_connect_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_open_by_handle_at_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_open_by_handle_at_x_extra_tail_1(
        args: *mut event_filler_arguments,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_io_uring_setup_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_io_uring_enter_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_io_uring_register_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mlock_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_munlock_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mlockall_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_munlockall_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_capset_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_dup2_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_dup2_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_dup3_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_dup3_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_dup_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_dup_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sched_prog_exec(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sched_prog_exec_2(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sched_prog_exec_3(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sched_prog_exec_4(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sched_prog_exec_5(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sched_prog_fork(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sched_prog_fork_2(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sched_prog_fork_3(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mlock2_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_fsconfig_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_epoll_create_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_epoll_create_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_epoll_create1_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_epoll_create1_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_socket_bind_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_bpf_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_close_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_close_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_fchdir_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_fchdir_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_ioctl_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mkdir_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_setpgid_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_recvfrom_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_recvmsg_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_listen_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_signalfd_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_splice_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_umount_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_umount2_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_umount2_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_pipe2_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_inotify_init_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_inotify_init1_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_eventfd2_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_eventfd2_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_signalfd4_e(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_signalfd4_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_prctl_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_memfd_create_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_pidfd_getfd_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_pidfd_open_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_init_module_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_finit_module_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mknod_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_mknodat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_newfstatat_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_process_vm_readv_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_process_vm_writev_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_sys_delete_module_x(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn f_terminate_filler(args: *mut event_filler_arguments) -> ::std::os::raw::c_int;
}
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct ppm_autofill_arg {
    pub id: i16,
    pub default_val: i64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ppm_autofill_arg"][::std::mem::size_of::<ppm_autofill_arg>() - 10usize];
    ["Alignment of ppm_autofill_arg"][::std::mem::align_of::<ppm_autofill_arg>() - 1usize];
    ["Offset of field: ppm_autofill_arg::id"]
        [::std::mem::offset_of!(ppm_autofill_arg, id) - 0usize];
    ["Offset of field: ppm_autofill_arg::default_val"]
        [::std::mem::offset_of!(ppm_autofill_arg, default_val) - 2usize];
};
pub const autofill_paramtype_APT_REG: autofill_paramtype = 0;
pub const autofill_paramtype_APT_SOCK: autofill_paramtype = 1;
pub type autofill_paramtype = ::std::os::raw::c_uint;
pub type filler_callback_t = ::std::option::Option<
    unsafe extern "C" fn(args: *mut event_filler_arguments) -> ::std::os::raw::c_int,
>;
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct ppm_event_entry {
    pub filler_callback: filler_callback_t,
    pub filler_id: ppm_filler_id,
    pub n_autofill_args: u16,
    pub paramtype: autofill_paramtype,
    pub autofill_args: [ppm_autofill_arg; 4usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ppm_event_entry"][::std::mem::size_of::<ppm_event_entry>() - 58usize];
    ["Alignment of ppm_event_entry"][::std::mem::align_of::<ppm_event_entry>() - 1usize];
    ["Offset of field: ppm_event_entry::filler_callback"]
        [::std::mem::offset_of!(ppm_event_entry, filler_callback) - 0usize];
    ["Offset of field: ppm_event_entry::filler_id"]
        [::std::mem::offset_of!(ppm_event_entry, filler_id) - 8usize];
    ["Offset of field: ppm_event_entry::n_autofill_args"]
        [::std::mem::offset_of!(ppm_event_entry, n_autofill_args) - 12usize];
    ["Offset of field: ppm_event_entry::paramtype"]
        [::std::mem::offset_of!(ppm_event_entry, paramtype) - 14usize];
    ["Offset of field: ppm_event_entry::autofill_args"]
        [::std::mem::offset_of!(ppm_event_entry, autofill_args) - 18usize];
};
